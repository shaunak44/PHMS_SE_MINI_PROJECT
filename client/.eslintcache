[{"/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/index.js":"1","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/App1.js":"2","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/reportWebVitals.js":"3","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/Chatbot.js":"4","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/Login.js":"5","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/LoginDoctor.js":"6","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/LoginHospitalOperator.js":"7","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/LoginPharmacyOperator.js":"8","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/RegisterHospital.js":"9","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/CitizenProfile.js":"10","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/RegisterPharmacy.js":"11","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/RegisterOperator.js":"12","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/CreateCitizenProfile.js":"13","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/RegisterDoctor.js":"14","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/signUp.js":"15","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/FAQ.js":"16","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/Analysis.js":"17"},{"size":521,"mtime":1618735105036,"results":"18","hashOfConfig":"19"},{"size":5477,"mtime":1618770262221,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1618735064487,"results":"21","hashOfConfig":"19"},{"size":1525,"mtime":1618735105036,"results":"22","hashOfConfig":"19"},{"size":3682,"mtime":1618735105036,"results":"23","hashOfConfig":"19"},{"size":8422,"mtime":1618735105036,"results":"24","hashOfConfig":"19"},{"size":10381,"mtime":1618735105036,"results":"25","hashOfConfig":"19"},{"size":13449,"mtime":1618735105036,"results":"26","hashOfConfig":"19"},{"size":5826,"mtime":1618735105036,"results":"27","hashOfConfig":"19"},{"size":1345,"mtime":1618735105036,"results":"28","hashOfConfig":"19"},{"size":5918,"mtime":1618735105036,"results":"29","hashOfConfig":"19"},{"size":4294,"mtime":1618735105036,"results":"30","hashOfConfig":"19"},{"size":10733,"mtime":1618735105036,"results":"31","hashOfConfig":"19"},{"size":4531,"mtime":1618735105036,"results":"32","hashOfConfig":"19"},{"size":4020,"mtime":1618737109878,"results":"33","hashOfConfig":"19"},{"size":2302,"mtime":1618752985773,"results":"34","hashOfConfig":"19"},{"size":4408,"mtime":1618771608308,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"ltm6x3",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/index.js",["75"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App1, { AppWithRouter } from './App1';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App1/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["76","77"],"/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/App1.js",[],"/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/reportWebVitals.js",[],"/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/Chatbot.js",["78","79","80","81"],"import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class Chatbot extends Component{\n    talk(event){\n        var know = {\n            \"hello\": \"Hello I Am A Simple Chatbot. I Am Here To Help You!\",\n            \"hi\": \"Hii, Tell me something about yourself ??\",\n            \"how are you?\": \"I am great !!\",\n            \"life is like hell\": \"Are you in TY COMP at COEP ?\",\n            \"tell me a random fact\": \"Life would have been much easy, if there was no Abhijit Sir.\",\n            \"yes\": \"Okay ! Have A Great Day !!\"\n        }\n        console.log(event);\n        if(event.keyCode == 13){\n            \n            var user = document.getElementById(\"userbox\").value\n            document.getElementById(\"userbox\").value = \"\"\n            document.getElementById(\"chatLog\").innerHTML += user + \"<br>\"\n            \n            if(user in know){\n                document.getElementById(\"chatLog\").innerHTML += \"> \" + know[user] + \"<br><br>\"\n            }\n            else{\n                document.getElementById(\"chatLog\").innerHTML += \"> \" + \"Sorry I Can't Understand. <br><br>\"\n            }\n        }\n    }\n    render() {\n        return (\n            <div>\n                <h2>CHATBOT</h2>\n                <h4 id=\"chatLog\"></h4>\n                <div style={{ textAlign: \"\" }}>\n                    <input id=\"userbox\" type=\"text\" onKeyDown={this.talk}></input>\n                </div>\n                <h3>Hello I am CHABOT, Ask me your queries !</h3>\n            </div>\n        )\n    }\n}\n","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/Login.js",[],"/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/LoginDoctor.js",["82","83","84"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Redirect, Link,} from 'react-router-dom';\nimport { selectFields } from 'express-validator/src/select-fields';\nimport { compare } from 'bcryptjs';\nimport {\n    Form,\n    Button,\n    Jumbotron,\n    Container\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst REDIRECT_PATH_LOGIN = 'doctor/dashboard'\n\nclass DoctorLogin extends Component{\n    constructor(props) {\n        super(props)\n\n        this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            aadhaar_id: '',\n            password: '',\n            redirect_flag: false\n        }\n\n\n    }\n\n    onChangeAadhaar(e){\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onChangePassword(e){\n        this.setState({password: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n\n        const userObject = {\n            aadhaar_id : this.state.aadhaar_id,\n            password : this.state.password\n        };\n        \n        sessionStorage.setItem('doctor_aadhaar_id', this.state.aadhaar_id);\n        console.log(userObject)\n\n        axios.post('http://localhost:5000/doctor/login', userObject)\n        .then((res) => {\n\n            // Save data to sessionStorage\n            \n\n            this.setState({redirect_flag: true}) \n            \n        \n        }).catch((error) => {\n            console.log(error)\n        });\n\n        this.setState({ aadhaar_id: '', password: '', redirect_flag: false});\n\n    }\n\n   \n    render(){\n        var isRedirect = this.state.redirect_flag;\n        let redirection_html = '';\n        if(isRedirect){\n            redirection_html = <Redirect to={REDIRECT_PATH_LOGIN}/>\n        }\n        else{\n            redirection_html = \"\";\n        }\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Login As Doctor</h2>\n                    <Form onSubmit={this.onSubmit}>\n\n                        <Form.Group>\n                            <Form.Label>Aadhar ID</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Aadhar Number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar} Min=\"100000000000\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control required onChange={this.onChangePassword} value={this.state.password} type=\"password\" placeholder=\"Password\" />\n                        </Form.Group>\n\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                </Jumbotron>\n                {redirection_html}\n            </Container> \n            // <div>\n            //     <form onSubmit={this.onSubmit}>\n            //         <label for=\"aadhaar_id\">Aadhaar:</label><br/>\n            //         <input type=\"number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar} Min=\"100000000000\"/><br/>\n            //         <label for=\"password\">Password:</label><br/>\n            //         <input type=\"password\" onChange={this.onChangePassword} value={this.state.password}/><br/>\n            //         <br/>\n            //         <input type=\"submit\" value=\"Submit\"/>\n            //     </form>\n            //     {redirection_html}\n            // </div> \n            \n        )\n    }\n}\n\nclass DoctorDashboard extends Component{\n    constructor(props) {\n        super(props);\n        this.onClickViewPatientProfile = this.onClickViewPatientProfile.bind(this);\n        this.onClickViewAppointment = this.onClickViewAppointment.bind(this);\n        this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        this.state = {\n            aadhaar_id:'',\n            showData: false,\n            doctor_id:'',\n            showAppointment: false\n        }\n        this.state = {\n            usersCollection:'',\n            doctorCollection:'',\n            appointmentCollection: '',\n        }\n    }\n    onClickViewPatientProfile(e) {\n        e.preventDefault();\n        console.log(this.state.aadhaar_id)\n        axios.get('http://localhost:5000/doctor/viewpatient', {\n            headers:{\n                'aadhaar_id': this.state.aadhaar_id\n            }\n        })\n        .then(res => {\n            this.setState({ usersCollection: res.data });\n            console.log(this.state.usersCollection)\n            this.setState({showData:true})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    async onClickViewAppointment(e) {\n        e.preventDefault();\n        let doctor_aadhaar_id = sessionStorage.getItem('doctor_aadhaar_id')\n        console.log(doctor_aadhaar_id);\n        await axios.get('http://localhost:5000/doctor/doctorInfo', {\n            headers:{\n                'aadhaar_id': doctor_aadhaar_id,\n            }\n        })\n        .then(res => {\n            this.setState({doctorCollection: res.data})\n            this.setState({doctor_id: this.state.doctorCollection[0].doctor_id})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n\n        await axios.get('http://localhost:5000/appointment/doctorappointmentinfo', {\n            headers:{\n                'doctor_id': this.state.doctor_id\n            }\n        })\n        .then(res => {\n            this.setState({ appointmentCollection: res.data });\n            console.log(this.state.appointmentCollection)\n            this.setState({showAppointment:true})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    \n    onChangeAadhaar(e){\n        this.setState({aadhaar_id: e.target.value})\n    }   \n    render(){\n        return(\n            <div>\n                <label for=\"aadhaar_id\">Aadhaar:</label><br/>\n                <input type=\"number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar} Min=\"100000000000\"/><br/>    \n                <Link onClick={this.onClickViewPatientProfile}>View Patient Profile</Link><br></br>\n                {this.state.showData ? <DisplayPatientData user={this.state.usersCollection} />: null}\n                <Link onClick={this.onClickViewAppointment}>Appointment Details</Link><br></br>\n                {this.state.showAppointment? <DisplayAppointments user={this.state.appointmentCollection}/>: null}\n                <a href=\"/logout\">Logout.</a>\n            </div>\n        )\n    }\n}\n\n\nexport{\n    DoctorLogin,\n    DoctorDashboard,\n}\n\nfunction DisplayPatientData(props) {\n    if(props.user[0]){\n        return (\n            <div>\n                <h2>aadhaar: {props.user[0].aadhaar_id}</h2>\n                <h2>Name: {props.user[0].name}</h2>\n            </div>\n        );\n    }\n    else{\n        return(\n            <div>\n                <h2>\n                    Patient record not found.\n                </h2>\n            </div>\n        )\n    }\n}\n\nclass DisplayAppointments extends Component {\n    constructor(props) {\n        super(props);\n        this.onClickConfirm = this.onClickConfirm.bind(this);\n    }\n\n    onClickConfirm(i, e){\n        e.preventDefault()\n        console.log(i)\n        const userObject = {\n            aadhaar_id : i.aadhaar_id,\n            doctor_id : i.doctor_id,\n            slot: i.slot,\n        };\n        \n        console.log(userObject)\n\n        axios.post('http://localhost:5000/appointment/confirmstatus', userObject)\n        .then((res) => {\n\n            console.log(res.data);\n            \n        \n        }).catch((error) => {\n            console.log(error)\n        });\n\n    }\n\n    render(){\n        if(this.props.user.length == 0){\n            return(\n                <div>\n                    No appointements pending or scheduled.\n                </div>\n            )\n        }\n        const listItems = this.props.user.map((i) => \n            <div key={i.slot}>\n                <h3>{i.aadhaar_id}</h3>\n                <h3>{i.slot}</h3>\n                <h3>{i.status ? \"Confirmed\": <button onClick={(e) => this.onClickConfirm(i, e)}>Confirm appointment </button>}</h3>\n            </div>);\n        return(\n            <div>\n                {listItems}\n            </div>\n        )\n    }\n}","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/LoginHospitalOperator.js",[],"/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/LoginPharmacyOperator.js",[],"/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/RegisterHospital.js",[],"/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/CitizenProfile.js",[],"/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/RegisterPharmacy.js",[],"/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/RegisterOperator.js",[],"/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/CreateCitizenProfile.js",[],"/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/RegisterDoctor.js",[],"/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/signUp.js",[],"/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/FAQ.js",["85","86"],"import React, { Component, useEffect, useState } from \"react\";\nimport Faq from \"react-faq-component\";\n\nconst data = {\n    title: \"FAQ\",\n    rows: [\n        {\n            title: \"Who can use PHMS?\",\n            content: `Every person having Aadhaar Id can use the services by registering on the PHMS portal.`,\n        },\n        {\n            title: \"Is my Data safe?\",\n            content:\n                \"We do not share ypur data with anyone for advertising, analysis etc. You data will be accessible to Doctors(for treatment) and Admins(for analysis)\",\n        },\n        {\n            title: \"Can I book online appointments?\",\n            content: `Yes. You can book online appointments here on PHMS portal.`,\n        },\n        {\n            title: \"As a pharmacy or hospital operator, how often should I update my Data?\",\n            content: `It is adviced to update your data as you update your inventory for optimal portal functioning.`,\n        },\n        {\n            title: \"Why does a doctor have access to my Data?\",\n            content: `The doctor needs to know the previous patient history for better treatment. Thus the doctors can chek previous data.`,\n        },\n        {\n            title: \"Can I rely on PHMS?\",\n            content: `Yes, you can definitely rely on PHMS. But in case of emergency and sever illness, visit your doctor immediately.`,\n        },\n        {\n            title: \"Who is responsible for delay in PHMS?\",\n            content: `We understand that delay in medical process is not tolerable. But due to various reasons like internet connectivity, improper filling of data, there may be delay in the process of appointments. The PHMS, however is not responsible for the loss and users are adviced to decide on their own discretion`,\n        },\n    ],\n};\n\nconst styles = {\n    // bgColor: 'white',\n    titleTextColor: \"Red\",\n    rowTitleColor: \"DarkBlue\",\n    rowContentColor: 'Charcoal',\n    arrowColor: \"red\",\n};\n\nconst config = {\n    animate: true,\n    // arrowIcon: \"V\",\n    tabFocus: true\n};\n\n\nexport default class FaqPage extends Component{\n    render() {\n        return (\n            <div>\n            <Faq\n                data={data}\n                styles={styles}\n                config={config}\n            />\n            </div>\n        )\n    }\n}","/home/vedant/Sem6/SE/PHMS_SE_MINI_PROJECT/client/src/services/Analysis.js",[],{"ruleId":"87","severity":1,"message":"88","line":4,"column":16,"nodeType":"89","messageId":"90","endLine":4,"endColumn":29},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"87","severity":1,"message":"95","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":16},{"ruleId":"96","severity":1,"message":"97","line":15,"column":26,"nodeType":"98","messageId":"99","endLine":15,"endColumn":28},{"ruleId":"100","severity":1,"message":"101","line":25,"column":70,"nodeType":"98","messageId":"102","endLine":25,"endColumn":71},{"ruleId":"103","severity":1,"message":"104","line":33,"column":17,"nodeType":"105","endLine":33,"endColumn":34},{"ruleId":"87","severity":1,"message":"106","line":4,"column":10,"nodeType":"89","messageId":"90","endLine":4,"endColumn":22},{"ruleId":"87","severity":1,"message":"107","line":5,"column":10,"nodeType":"89","messageId":"90","endLine":5,"endColumn":17},{"ruleId":"96","severity":1,"message":"97","line":261,"column":35,"nodeType":"98","messageId":"99","endLine":261,"endColumn":37},{"ruleId":"87","severity":1,"message":"108","line":1,"column":28,"nodeType":"89","messageId":"90","endLine":1,"endColumn":37},{"ruleId":"87","severity":1,"message":"109","line":1,"column":39,"nodeType":"89","messageId":"90","endLine":1,"endColumn":47},"no-unused-vars","'AppWithRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["110"],"no-negated-in-lhs",["111"],"'ReactDOM' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'selectFields' is defined but never used.","'compare' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]