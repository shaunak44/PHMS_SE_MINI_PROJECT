[{"/home/shaunak/SE/SE_Project/client/src/index.js":"1","/home/shaunak/SE/SE_Project/client/src/App1.js":"2","/home/shaunak/SE/SE_Project/client/src/reportWebVitals.js":"3","/home/shaunak/SE/SE_Project/client/src/services/Login.js":"4","/home/shaunak/SE/SE_Project/client/src/services/signUp.js":"5","/home/shaunak/SE/SE_Project/client/src/services/CitizenProfile.js":"6","/home/shaunak/SE/SE_Project/client/src/services/RegisterHospital.js":"7","/home/shaunak/SE/SE_Project/client/src/services/RegisterOperator.js":"8","/home/shaunak/SE/SE_Project/client/src/services/RegisterDoctor.js":"9","/home/shaunak/SE/SE_Project/client/src/services/CreateCitizenProfile.js":"10","/home/shaunak/SE/SE_Project/client/src/services/Chatbot.js":"11","/home/shaunak/SE/SE_Project/client/src/services/RegisterPharmacy.js":"12","/home/shaunak/SE/SE_Project/client/src/services/LoginPharmacyOperator.js":"13","/home/shaunak/SE/SE_Project/client/src/services/LoginDoctor.js":"14","/home/shaunak/SE/SE_Project/client/src/services/LoginHospitalOperator.js":"15","/home/shaunak/SE/SE_Project/client/src/services/FAQ.js":"16","/home/shaunak/SE/SE_Project/client/src/services/Analysis.js":"17","/home/shaunak/SE/SE_Project/client/src/services/Locator.js":"18"},{"size":521,"mtime":1618723692589,"results":"19","hashOfConfig":"20"},{"size":6890,"mtime":1619531638837,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1612081859868,"results":"22","hashOfConfig":"20"},{"size":3963,"mtime":1618912976312,"results":"23","hashOfConfig":"20"},{"size":4428,"mtime":1619345300338,"results":"24","hashOfConfig":"20"},{"size":1795,"mtime":1619529997256,"results":"25","hashOfConfig":"20"},{"size":5417,"mtime":1619531162126,"results":"26","hashOfConfig":"20"},{"size":3626,"mtime":1618912976312,"results":"27","hashOfConfig":"20"},{"size":3915,"mtime":1618912976312,"results":"28","hashOfConfig":"20"},{"size":18588,"mtime":1619530009468,"results":"29","hashOfConfig":"20"},{"size":1678,"mtime":1619529954383,"results":"30","hashOfConfig":"20"},{"size":5474,"mtime":1619531306337,"results":"31","hashOfConfig":"20"},{"size":15132,"mtime":1619530095031,"results":"32","hashOfConfig":"20"},{"size":10113,"mtime":1619530060825,"results":"33","hashOfConfig":"20"},{"size":12016,"mtime":1619530073200,"results":"34","hashOfConfig":"20"},{"size":2930,"mtime":1619530028819,"results":"35","hashOfConfig":"20"},{"size":9717,"mtime":1619345541030,"results":"36","hashOfConfig":"20"},{"size":7212,"mtime":1619537012337,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1hvvxb4",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/shaunak/SE/SE_Project/client/src/index.js",["78"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App1, { AppWithRouter } from './App1';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App1/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["79","80"],"/home/shaunak/SE/SE_Project/client/src/App1.js",[],"/home/shaunak/SE/SE_Project/client/src/reportWebVitals.js",[],"/home/shaunak/SE/SE_Project/client/src/services/Login.js",[],"/home/shaunak/SE/SE_Project/client/src/services/signUp.js",["81"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport {\n    Form,\n    Button,\n    Jumbotron,\n    Container\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport validator from 'validator'\n\nexport default class SignUp extends Component{\n    constructor(props) {\n        super(props)\n\n        // this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        // this.onChangeEmail = this.onChangeEmail.bind(this);\n        // this.onChangePassword = this.onChangePassword.bind(this);\n        // this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            aadhaar_id: '',\n            email_id: '',\n            password: '',\n            errorPassword:'',\n        }\n    }\n\n    onChangeAadhaar(e){\n        console.log(e.target.value);\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onChangeEmail(e){\n        console.log(e.target.value);\n        this.setState({email_id: e.target.value})\n    }\n\n    onChangePassword(e){\n        console.log(e.target.value);\n        if (validator.isStrongPassword(e.target.value, {\n            minLength: 8, minLowercase: 1,\n            minUppercase: 1, minNumbers: 1, minSymbols: 1\n          })) {\n            this.setState({errorPassword: \"Strong Password\"})  \n          } else {\n            this.setState({errorPassword: \"Week Password\"})  \n          }\n          this.setState({password: e.target.value})\n    }\n\n    onSubmit(e){\n\n        console.log(e);\n        e.preventDefault();\n\n        if(this.state.errorPassword == \"Week Password\"){\n            toast('Week password')\n            return;\n        }\n\n        const userObject = {\n            aadhaar_id : this.state.aadhaar_id,\n            email_id : this.state.email_id,\n            password : this.state.password\n        };\n        \n        console.log(userObject)\n\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/signup`, userObject)\n        .then((res) => {\n            console.log(res.data.token)\n\n            // Save data to sessionStorage\n            sessionStorage.setItem('token', res.data.token);\n\n            // Get saved data from sessionStorage\n            let data = sessionStorage.getItem('token');\n\n            console.log(data)\n             toast(\"Sucessfully signed up\");\n\n        }).catch((error) => {\n            console.log(error)\n            toast(\"Invalid cred or already registered\");\n        });\n\n        this.setState({ aadhaar_id: '', email_id: '', password: ''});\n\n    }\n\n   \n    render(){\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Register</h2>\n                    <Form onSubmit={this.onSubmit.bind(this)}>\n\n                        <Form.Group>\n                            <Form.Label>Aadhar ID</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Aadhar Number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar.bind(this)} Min=\"100000000000\" Max=\"999999999999\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control required type=\"email\" placeholder=\"Enter email\" value={this.state.email_id} onChange={this.onChangeEmail.bind(this)} />\n                            <Form.Text className=\"text-muted\">\n                            We'll never share your email with anyone else.\n                            </Form.Text>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control required onChange={this.onChangePassword.bind(this)} value={this.state.password} type=\"password\" placeholder=\"Password\" />\n                            <Form.Text className=\"text-muted\">\n                            {this.state.errorPassword}\n                            </Form.Text>    \n                        </Form.Group>\n\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                        <ToastContainer />\n                    </Form>\n                </Jumbotron>\n            </Container> \n        )\n    }\n\n}","/home/shaunak/SE/SE_Project/client/src/services/CitizenProfile.js",[],"/home/shaunak/SE/SE_Project/client/src/services/RegisterHospital.js",["82"],"/home/shaunak/SE/SE_Project/client/src/services/RegisterOperator.js",[],"/home/shaunak/SE/SE_Project/client/src/services/RegisterDoctor.js",[],"/home/shaunak/SE/SE_Project/client/src/services/CreateCitizenProfile.js",[],"/home/shaunak/SE/SE_Project/client/src/services/Chatbot.js",["83","84"],"/home/shaunak/SE/SE_Project/client/src/services/RegisterPharmacy.js",["85"],"/home/shaunak/SE/SE_Project/client/src/services/LoginPharmacyOperator.js",[],"/home/shaunak/SE/SE_Project/client/src/services/LoginDoctor.js",[],"/home/shaunak/SE/SE_Project/client/src/services/LoginHospitalOperator.js",[],"/home/shaunak/SE/SE_Project/client/src/services/FAQ.js",[],"/home/shaunak/SE/SE_Project/client/src/services/Analysis.js",["86","87","88","89"],"import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass AgePie extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            options: {\n                labels: ['0-18', '19-58', '59+'],\n                title: {\n                    text: \"Age Division\",\n                    align: 'left',\n                    margin: 10,\n                    offsetX: 0,\n                    offsetY: 0,\n                    floating: false,\n                    style: {\n                      fontSize:  '25px',\n                      fontWeight:  'bold',\n                      fontFamily:  undefined,\n                      color:  '#263238'\n                    },\n                },\n            },\n            series: [0, 0, 0],\n            labels: ['0-18', '19-58', '59+'],\n            citizenInfo: [{}, {}]\n        }\n    }\n\n    componentDidMount(){\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/viewstats`, {\n        })\n        .then(res => {\n            this.setState({ citizenInfo: res.data });\n            console.log(this.state.citizenInfo)\n            this.counter();\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    counter(){\n        var a = 0;\n        var b = 0;\n        var c = 0;\n        var x = {};\n\n        for(x in this.state.citizenInfo){\n            if (this.state.citizenInfo[x].age){\n                if(this.state.citizenInfo[x].age <= 18){\n                    a++;\n                }\n                else if(this.state.citizenInfo[x].age >= 19 && this.state.citizenInfo[x].age <= 58){\n                    b++;  \n                }\n                else if(this.state.citizenInfo[x].age >= 59){\n                    c++;\n                }\n            }\n        }\n\n        this.setState({series: [a, b, c]});\n    }\n\n    render() {\n        const divStyle = {\n            display: 'block',\n            width: 'max-content',\n            margin: '20px auto',\n        };\n        return (\n        <div style={divStyle}>\n            <Chart options={this.state.options} series={this.state.series} type=\"donut\" width=\"500\" />\n        </div>\n        );\n    }\n}\n\n\nclass BmiPie extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            options: {\n                labels: ['Underweight (Below 18.5)', 'Healthy Weight (18.5 to 14.9)', 'Overweight(25.0 to 29.9)', 'Obese (30.0 and above)'],\n                title: {\n                    text: \"BMI Analysis\",\n                    align: 'left',\n                    margin: 10,\n                    offsetX: 0,\n                    offsetY: 0,\n                    floating: false,\n                    style: {\n                      fontSize:  '25px',\n                      fontWeight:  'bold',\n                      fontFamily:  undefined,\n                      color:  '#263238'\n                    },\n                },\n            },\n            series: [0, 0, 0, 0],\n            labels: ['Underweight (Below 18.5)', 'Healthy Weight (18.5 to 14.9)', 'Overweight(25.0 to 29.9)', 'Obese (30.0 and above)'],\n            citizenInfo: [{}, {}]\n        }\n    }\n\n    componentDidMount(){\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/viewstats`, {\n        })\n        .then(res => {\n            this.setState({ citizenInfo: res.data });\n            console.log(this.state.citizenInfo)\n            this.counter();\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    counter(){\n        var a = 0;\n        var b = 0;\n        var c = 0;\n        var d = 0;\n        var x = {};\n\n        for(x in this.state.citizenInfo){\n            if (this.state.citizenInfo[x].bmi){\n                if(this.state.citizenInfo[x].bmi < 18.5){\n                    a++;\n                }\n                else if(this.state.citizenInfo[x].bmi >= 18.5 && this.state.citizenInfo[x].bmi < 25){\n                    b++;  \n                }\n                else if(this.state.citizenInfo[x].bmi >= 25.0 && this.state.citizenInfo[x].bmi < 30){\n                    c++;\n                }\n                else if(this.state.citizenInfo[x].bmi >= 30){\n                    d++;\n                }\n            }\n        }\n\n        this.setState({series: [a, b, c, d]});\n    }\n\n    render() {\n        const divStyle = {\n            display: 'block',\n            width: 'max-content',\n            margin: '20px auto',\n        };\n        return (\n        <div style={divStyle}>\n            <Chart options={this.state.options} series={this.state.series} type=\"donut\" width=\"600\" />\n        </div>\n        );\n    }\n}\n\n\nclass BedsBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options: {\n                chart: {\n                    id: \"basic-bar\"\n                },\n                xaxis: {\n                    categories: []\n                    // hosp names here\n                },\n                title: {\n                    text: \"Number of Beds available\",\n                    align: 'left',\n                    margin: 10,\n                    offsetX: 10,\n                    offsetY: 0,\n                    floating: false,\n                    style: {\n                      fontSize:  '25px',\n                      fontWeight:  'bold',\n                      fontFamily:  undefined,\n                      color:  '#263238'\n                    },\n                },\n            },\n            series: [\n                {\n                    name: \"series-1\",\n                    data: [],\n                    // number of beds here\n                }\n            ],\n            hospInfo: [{}, {}]\n        };\n    }\n\n    componentDidMount(){\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/hospital/viewstats`, {\n        })\n        .then(res => {\n            this.setState({ hospInfo: res.data });\n            console.log(this.state.hospInfo);\n            this.counter();\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    counter(){\n        var x = {};\n        var names = [];\n        var beds = [];\n\n        for(x in this.state.hospInfo){\n            if (this.state.hospInfo[x].name){\n                names[x] = this.state.hospInfo[x].name;\n                beds[x] = this.state.hospInfo[x].no_of_beds;\n            }\n        }\n\n        this.setState({options: {xaxis: {categories: names}}, series: [{name: \"No. of Beds\", data: beds}]});\n    }\n\n    render() {\n        const divStyle = {\n            display: 'block',\n            width: 'max-content',\n            margin: '20px auto',\n        };\n        return (\n            <div style={divStyle}>\n\n            \n            <div className=\"app\">\n            <div className=\"row\">\n                <div className=\"mixed-chart\">\n                <Chart\n                    options={this.state.options}\n                    series={this.state.series}\n                    type=\"bar\"\n                    width=\"500\"\n                />\n                </div>\n            </div>\n            </div>\n            </div>\n        );\n    }\n}\n\n\nclass CheckupPie extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            options: {\n                labels: ['Last 1 Month', 'Last 2 to 3 Months', 'Beyond 3 months'],\n                title: {\n                    text: \"Last Health Check-up\",\n                    align: 'left',\n                    margin: 10,\n                    offsetX: 0,\n                    offsetY: 0,\n                    floating: false,\n                    style: {\n                      fontSize:  '25px',\n                      fontWeight:  'bold',\n                      fontFamily:  undefined,\n                      color:  '#263238'\n                    },\n                },\n            },\n            series: [0, 0, 0],\n            labels: ['Last 1 Month', 'Last 2 to 3 Months', 'Beyond 3 months'],\n            citizenInfo: [{}, {}]\n        }\n    }\n\n    componentDidMount(){\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/viewstats`, {\n        })\n        .then(res => {\n            this.setState({ citizenInfo: res.data });\n            console.log(this.state.citizenInfo)\n            this.counter();\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n    diff_months(dt2, dt1) {\n        var diff =(dt2.getTime() - dt1.getTime()) / 1000;\n        diff /= (60 * 60 * 24 * 7 * 4);\n        return Math.abs(Math.round(diff));\n    }\n\n    counter(){\n        var a = 0;\n        var b = 0;\n        var c = 0;\n        var x = {};\n        var d = new Date();\n\n        for(x in this.state.citizenInfo){\n            if (this.state.citizenInfo[x].last_checkup_date){\n\n                var temp = new Date(this.state.citizenInfo[x].last_checkup_date);\n                var diff = this.diff_months(d, temp);\n                if(diff == 0 || diff == 1)\n                    a++;\n                else if(diff == 2 || diff == 3)\n                    b++;\n                else if(diff > 3)\n                    c++;\n            }\n        }\n\n        this.setState({series: [a, b, c]});\n    }\n\n    render() {\n        const divStyle = {\n            display: 'block',\n            width: 'max-content',\n            margin: '20px auto',\n        };\n        return (\n        <div style={divStyle}>\n            <Chart options={this.state.options} series={this.state.series} type=\"donut\" width=\"600\" />\n        </div>\n        );\n    }\n}\n\n\n\nexport {\n    AgePie,\n    BmiPie,\n    BedsBar,\n    CheckupPie,\n};","/home/shaunak/SE/SE_Project/client/src/services/Locator.js",["90","91","92","93"],{"ruleId":"94","severity":1,"message":"95","line":4,"column":16,"nodeType":"96","messageId":"97","endLine":4,"endColumn":29},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":60,"column":37,"nodeType":"104","messageId":"105","endLine":60,"endColumn":39},{"ruleId":"106","severity":1,"message":"107","line":67,"column":9,"nodeType":"108","endLine":67,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":27,"column":70,"nodeType":"104","messageId":"111","endLine":27,"endColumn":71},{"ruleId":"112","severity":1,"message":"113","line":36,"column":21,"nodeType":"114","endLine":36,"endColumn":38},{"ruleId":"106","severity":1,"message":"107","line":66,"column":9,"nodeType":"108","endLine":66,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":322,"column":25,"nodeType":"104","messageId":"105","endLine":322,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":322,"column":38,"nodeType":"104","messageId":"105","endLine":322,"endColumn":40},{"ruleId":"102","severity":1,"message":"103","line":324,"column":30,"nodeType":"104","messageId":"105","endLine":324,"endColumn":32},{"ruleId":"102","severity":1,"message":"103","line":324,"column":43,"nodeType":"104","messageId":"105","endLine":324,"endColumn":45},{"ruleId":"94","severity":1,"message":"115","line":3,"column":9,"nodeType":"96","messageId":"97","endLine":3,"endColumn":17},{"ruleId":"94","severity":1,"message":"116","line":13,"column":10,"nodeType":"96","messageId":"97","endLine":13,"endColumn":24},{"ruleId":"102","severity":1,"message":"103","line":47,"column":42,"nodeType":"104","messageId":"105","endLine":47,"endColumn":44},{"ruleId":"102","severity":1,"message":"103","line":152,"column":42,"nodeType":"104","messageId":"105","endLine":152,"endColumn":44},"no-unused-vars","'AppWithRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["117"],"no-negated-in-lhs",["118"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Redirect' is defined but never used.","'ToastContainer' is defined but never used.","no-global-assign","no-unsafe-negation"]