[{"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/index.js":"1","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/reportWebVitals.js":"2","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/App1.js":"3","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginDoctor.js":"4","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/signUp.js":"5","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginHospitalOperator.js":"6","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/Login.js":"7","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/CitizenProfile.js":"8","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterHospital.js":"9","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginPharmacyOperator.js":"10","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterPharmacy.js":"11","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterOperator.js":"12","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/FAQ.js":"13","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterDoctor.js":"14","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/Locator.js":"15","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/Analysis.js":"16","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/CreateCitizenProfile.js":"17"},{"size":521,"mtime":1619706873480,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1619706873480,"results":"20","hashOfConfig":"19"},{"size":11513,"mtime":1619712141549,"results":"21","hashOfConfig":"19"},{"size":10113,"mtime":1619706873480,"results":"22","hashOfConfig":"19"},{"size":4428,"mtime":1619706873480,"results":"23","hashOfConfig":"19"},{"size":12016,"mtime":1619706873480,"results":"24","hashOfConfig":"19"},{"size":3963,"mtime":1619706873480,"results":"25","hashOfConfig":"19"},{"size":1911,"mtime":1619709705286,"results":"26","hashOfConfig":"19"},{"size":5417,"mtime":1619706873480,"results":"27","hashOfConfig":"19"},{"size":15132,"mtime":1619706873480,"results":"28","hashOfConfig":"19"},{"size":5474,"mtime":1619706873480,"results":"29","hashOfConfig":"19"},{"size":3626,"mtime":1619706873480,"results":"30","hashOfConfig":"19"},{"size":3063,"mtime":1619706873480,"results":"31","hashOfConfig":"19"},{"size":3915,"mtime":1619706873480,"results":"32","hashOfConfig":"19"},{"size":7261,"mtime":1619711271759,"results":"33","hashOfConfig":"19"},{"size":11179,"mtime":1619710301279,"results":"34","hashOfConfig":"19"},{"size":18827,"mtime":1619709867172,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1ip7eu4",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/index.js",["77"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App1, { AppWithRouter } from './App1';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App1/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["78","79"],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/reportWebVitals.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/App1.js",["80","81","82"],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginDoctor.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/signUp.js",["83"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport {\n    Form,\n    Button,\n    Jumbotron,\n    Container\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport validator from 'validator'\n\nexport default class SignUp extends Component{\n    constructor(props) {\n        super(props)\n\n        // this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        // this.onChangeEmail = this.onChangeEmail.bind(this);\n        // this.onChangePassword = this.onChangePassword.bind(this);\n        // this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            aadhaar_id: '',\n            email_id: '',\n            password: '',\n            errorPassword:'',\n        }\n    }\n\n    onChangeAadhaar(e){\n        console.log(e.target.value);\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onChangeEmail(e){\n        console.log(e.target.value);\n        this.setState({email_id: e.target.value})\n    }\n\n    onChangePassword(e){\n        console.log(e.target.value);\n        if (validator.isStrongPassword(e.target.value, {\n            minLength: 8, minLowercase: 1,\n            minUppercase: 1, minNumbers: 1, minSymbols: 1\n          })) {\n            this.setState({errorPassword: \"Strong Password\"})  \n          } else {\n            this.setState({errorPassword: \"Week Password\"})  \n          }\n          this.setState({password: e.target.value})\n    }\n\n    onSubmit(e){\n\n        console.log(e);\n        e.preventDefault();\n\n        if(this.state.errorPassword == \"Week Password\"){\n            toast('Week password')\n            return;\n        }\n\n        const userObject = {\n            aadhaar_id : this.state.aadhaar_id,\n            email_id : this.state.email_id,\n            password : this.state.password\n        };\n        \n        console.log(userObject)\n\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/signup`, userObject)\n        .then((res) => {\n            console.log(res.data.token)\n\n            // Save data to sessionStorage\n            sessionStorage.setItem('token', res.data.token);\n\n            // Get saved data from sessionStorage\n            let data = sessionStorage.getItem('token');\n\n            console.log(data)\n             toast(\"Sucessfully signed up\");\n\n        }).catch((error) => {\n            console.log(error)\n            toast(\"Invalid cred or already registered\");\n        });\n\n        this.setState({ aadhaar_id: '', email_id: '', password: ''});\n\n    }\n\n   \n    render(){\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Register</h2>\n                    <Form onSubmit={this.onSubmit.bind(this)}>\n\n                        <Form.Group>\n                            <Form.Label>Aadhar ID</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Aadhar Number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar.bind(this)} Min=\"100000000000\" Max=\"999999999999\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control required type=\"email\" placeholder=\"Enter email\" value={this.state.email_id} onChange={this.onChangeEmail.bind(this)} />\n                            <Form.Text className=\"text-muted\">\n                            We'll never share your email with anyone else.\n                            </Form.Text>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control required onChange={this.onChangePassword.bind(this)} value={this.state.password} type=\"password\" placeholder=\"Password\" />\n                            <Form.Text className=\"text-muted\">\n                            {this.state.errorPassword}\n                            </Form.Text>    \n                        </Form.Group>\n\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                        <ToastContainer />\n                    </Form>\n                </Jumbotron>\n            </Container> \n        )\n    }\n\n}","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginHospitalOperator.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/Login.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/CitizenProfile.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterHospital.js",["84"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n    Form,\n    Button,\n    Jumbotron,\n    Container\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default class HospitalRegister extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            usersCollection: []\n        }\n\n        this.onChangeHospitalId = this.onChangeHospitalId.bind(this);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeNoOfBeds = this.onChangeNoOfBeds.bind(this);\n        this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n        this.onChangeAddress = this.onChangeAddress.bind(this);\n        this.onChangeType  = this.onChangeType.bind(this);\n        this.onSubmit  = this.onSubmit.bind(this);\n\n\n\n        this.state = {\n            hospital_id: '',\n            name:'',\n            no_of_beds:'',\n            phone_number:'',\n            address:'',\n            type:'',\n            pincode:'',\n        };\n    }\n\n    onChangeHospitalId(e){\n        this.setState({hospital_id: e.target.value})\n    }\n\n    onChangeName(e){\n        this.setState({name: e.target.value})\n    }\n    onChangeNoOfBeds(e){\n        this.setState({no_of_beds: e.target.value})\n    }\n    onChangePhoneNumber(e){\n        this.setState({phone_number: e.target.value})\n    }\n    onChangeAddress(e){\n        this.setState({address: e.target.value})\n    }\n    onChangePincode(e){\n        this.setState({pincode: e.target.value})\n    }\n    onChangeType(e){\n        this.setState({type: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n        this.state.address += (\"-\" + this.state.pincode)\n\n        const userObject = {\n            hospital_id: this.state.hospital_id,\n            name : this.state.name,\n            address : this.state.address,\n            phone_number : this.state.phone_number,\n            no_of_beds: this.state.no_of_beds,\n            type: this.state.type,\n        };\n        console.log(userObject)\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/hospital/registerhospital`, userObject)\n        .then((res) => {\n            console.log(res.data.message)\n            toast.success('Registration Sucessful')\n\n        }).catch((error) => {\n            console.log(error)\n            toast.error('Already registred or Invalid Details')\n        });\n\n        this.setState({\n            hospital_id: '',\n            name:'',\n            no_of_beds:'',\n            phone_number:'',\n            address:'',\n            type:'',\n        });\n    }\n\n    render(){\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Register Hospital</h2>\n                    <Form onSubmit={this.onSubmit.bind(this)}>\n                        <Form.Group>\n                            <Form.Label>Name:</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"Enter Hospital Name\" value={this.state.name} onChange={this.onChangeName.bind(this)} />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Hospital ID:</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Hospital Number\" value={this.state.hospital_id} onChange={this.onChangeHospitalId.bind(this)} />\n                        </Form.Group>   \n\n                        <Form.Group>\n                            <Form.Label>Phone Number:</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Hospital Phone Number\" value={this.state.phone_number} onChange={this.onChangePhoneNumber.bind(this)} />\n                        </Form.Group>    \n\n                        <Form.Group>\n                            <Form.Label>Number Of Beds:</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Number Of Beds\" value={this.state.no_of_beds} onChange={this.onChangeNoOfBeds.bind(this)} />\n                        </Form.Group>  \n\n                        <Form.Group>\n                            <Form.Label>Address:</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"Enter Hospital Address\" value={this.state.address} onChange={this.onChangeAddress.bind(this)}  />\n                        </Form.Group>  \n\n                        <Form.Group>\n                            <Form.Label>Pincode:</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Pincode\" value={this.state.pincode} onChange={this.onChangePincode.bind(this)} min=\"100000\" max=\"999999\"/>\n                        </Form.Group>  \n\n                        <Form.Group>\n                            <Form.Label>Type:</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"Enter Hospital Type\" value={this.state.type} onChange={this.onChangeType.bind(this)} />\n                        </Form.Group>              \n\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                        <ToastContainer/>\n                    </Form>\n                </Jumbotron>\n            </Container> \n           \n        )\n    }\n}","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginPharmacyOperator.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterPharmacy.js",["85"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n    Form,\n    Button,\n    Jumbotron,\n    Container\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \nexport default class PharmacyRegister extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            usersCollection: []\n        }\n\n        this.onChangeStoreId = this.onChangeStoreId.bind(this);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeOpeningTime = this.onChangeOpeningTime.bind(this);\n        this.onChangePhoneNumber = this.onChangePhoneNumber.bind(this);\n        this.onChangeAddress = this.onChangeAddress.bind(this);\n        this.onChangeClosingTime  = this.onChangeClosingTime.bind(this);\n        this.onSubmit  = this.onSubmit.bind(this);\n\n\n\n        this.state = {\n            store_id: '',\n            name:'',\n            opening_time:'',\n            phone_number:'',\n            address:'',\n            closing_time:'',\n            pincode:''\n        };\n    }\n\n\n    onChangeStoreId(e){\n        this.setState({store_id: e.target.value})\n    }\n\n    onChangeName(e){\n        this.setState({name: e.target.value})\n    }\n    onChangeOpeningTime(e){\n        this.setState({opening_time: e.target.value})\n    }\n    onChangePhoneNumber(e){\n        this.setState({phone_number: e.target.value})\n    }\n    onChangeAddress(e){\n        this.setState({address: e.target.value})\n    }\n    onChangePincode(e){\n        this.setState({pincode: e.target.value})\n    }\n    onChangeClosingTime(e){\n        this.setState({closing_time: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n        this.state.address += (\"-\"+this.state.pincode)\n        const userObject = {\n            store_id: this.state.store_id,\n            name : this.state.name,\n            address : this.state.address,\n            phone_number : this.state.phone_number,\n            opening_time: this.state.opening_time,\n            closing_time: this.state.closing_time,\n        };\n        console.log(userObject)\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/pharmacy/registerpharmacy`, userObject)\n        .then((res) => {\n            console.log(res.data.message)\n            toast.success('Registration Sucessful')\n\n        }).catch((error) => {\n            console.log(error)\n            toast.error('Already registered or Invalid details')\n        });\n\n        this.setState({\n            store_id: '',\n            name:'',\n            opening_time:'',\n            phone_number:'',\n            address:'',\n            closing_time:''\n        });\n    }\n\n    render(){\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Register Pharmacy</h2>\n                    <Form onSubmit={this.onSubmit.bind(this)}>\n                        <Form.Group>\n                            <Form.Label>Name:</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"Enter Pharmacy Name\" value={this.state.name} onChange={this.onChangeName.bind(this)} />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Pharmacy ID:</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Pharmacy ID\" value={this.state.store_id} onChange={this.onChangeStoreId.bind(this)} />\n                        </Form.Group>   \n\n                        <Form.Group>\n                            <Form.Label>Phone Number:</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Pharmacy Phone Number\" value={this.state.phone_number} onChange={this.onChangePhoneNumber.bind(this)} />\n                        </Form.Group>    \n\n                        <Form.Group>\n                            <Form.Label>Opening Time:</Form.Label>\n                            <Form.Control required type=\"time\" placeholder=\"Enter Opening Time\" value={this.state.opening_time} onChange={this.onChangeOpeningTime.bind(this)} />\n                        </Form.Group>  \n\n                        <Form.Group>\n                            <Form.Label>Closing Time:</Form.Label>\n                            <Form.Control required type=\"time\" placeholder=\"Enter Closing Time\" value={this.state.closing_time} onChange={this.onChangeClosingTime.bind(this)} />\n                        </Form.Group> \n\n                        <Form.Group>\n                            <Form.Label>Address:</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"Enter Hospital Address\" value={this.state.address} onChange={this.onChangeAddress.bind(this)}  />\n                        </Form.Group> \n\n                        <Form.Group>\n                            <Form.Label>Pincode:</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Pincode\" value={this.state.pincode} onChange={this.onChangePincode.bind(this)} min=\"100000\" max=\"999999\"/>\n                        </Form.Group>                \n\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                        <ToastContainer/>\n                    </Form>\n                </Jumbotron>\n            </Container> \n        )\n    }\n}","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterOperator.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/FAQ.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterDoctor.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/Locator.js",["86","87"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport {\n    Form,\n    Jumbotron,\n    Container,\n    Card,\n    CardDeck\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass HospitalLocator extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            HospitalInfo: '',\n            pincode:'',\n            LocatedHospital:'',\n        }\n    }\n\n    componentDidMount(){\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/hospital/viewstats`, {\n            \n        })\n        .then(res => {\n            this.setState({ HospitalInfo: res.data });\n            console.log(this.state.HospitalInfo)\n        })\n        .catch(function (error) {\n            console.log(error);\n            toast.error('Error')\n        })\n    }\n\n    onChangePincode(e){\n        console.log(e.target.value)\n        const info = this.state.HospitalInfo;\n        console.log(info)\n        let listItems = []\n\n        for(let i = 0; i < info.length; i++){\n            if(info[i].address.slice(-6) == e.target.value){\n                listItems.push(\n                <div>\n                    <CardDeck>\n                    <Card border=\"info\" style={{ width: '18rem' }}>\n                        <Card.Header>Hospital ID: {info[i].hospital_id}</Card.Header>\n                        <Card.Body>\n                            <Card.Text>Name: {info[i].name}</Card.Text>\n                            <Card.Text>Phone Number: {info[i].phone_number[0]}</Card.Text>\n                            <Card.Text>No of Beds: {info[i].no_of_beds}</Card.Text>\n                            <Card.Text>Type: {info[i].type}</Card.Text>\n                            <Card.Text>Address: {info[i].address}</Card.Text>\n                        </Card.Body>\n                    </Card>\n                    </CardDeck><br></br>\n                </div>\n                )\n            }\n        }\n        this.setState({LocatedHospital: listItems})\n    }\n\n    render(){\n        const pincodes = []\n        const uniqueChars = []\n        for (let i = 0; i < this.state.HospitalInfo.length; i++) {\n            pincodes.push(\n                this.state.HospitalInfo[i].address.substr(this.state.HospitalInfo[i].address.length - 6)\n            )\n        }\n        pincodes.forEach((c) => {\n            if (!uniqueChars.includes(c)) {\n                uniqueChars.push(c);\n            }\n        });\n        console.log(uniqueChars)\n\n        const info = []\n        \n        for (let i = 0; i < uniqueChars.length; i++) {\n            info.push(\n                <option value= {uniqueChars[i]}>\n                    {uniqueChars[i]}\n                </option>\n            )\n        }\n        \n        if(info.length === 0){\n            info.push(<option>No available</option>)\n        }\n        return(\n            <Container>\n            <Container>\n                <Jumbotron>\n                    <h1>Locate Hospital</h1><hr></hr>\n                    <Form.Group>\n                        <Form.Label>Select Pincode</Form.Label>\n                        <Form.Control as=\"select\" required type=\"number\" placeholder=\"Enter Pincode\" onChange={this.onChangePincode.bind(this)}>\n                            <option disabled selected value> -- select an option -- </option>\n                            {info}\n                        </Form.Control>\n                    </Form.Group>\n                </Jumbotron>\n            </Container>\n            <Container>\n                <Jumbotron>\n                    {this.state.LocatedHospital}\n                </Jumbotron>\n            </Container>\n            </Container>\n        )\n    }\n\n}\n\nclass PharmacyLocator extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            HospitalInfo: '',\n            pincode:'',\n            LocatedHospital:'',\n        }\n    }\n\n    componentDidMount(){\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/pharmacy/getinfo`, {\n            \n        })\n        .then(res => {\n            this.setState({ HospitalInfo: res.data });\n            console.log(this.state.HospitalInfo)\n        })\n        .catch(function (error) {\n            console.log(error);\n            toast.error('Error')\n        })\n    }\n\n    onChangePincode(e){\n        console.log(e.target.value)\n        const info = this.state.HospitalInfo;\n        console.log(info)\n        let listItems = []\n\n        for(let i = 0; i < info.length; i++){\n            if(info[i].address.slice(-6) == e.target.value){\n                listItems.push(\n                <div>\n                    <CardDeck>\n                    <Card border=\"info\" style={{ width: '18rem' }}>\n                        <Card.Header>Store ID: {info[i].store_id}</Card.Header>\n                        <Card.Body>\n                            <Card.Text>Name: {info[i].name}</Card.Text>\n                            <Card.Text>Phone Number: {info[i].phone_number[0]}</Card.Text>\n                            <Card.Text>Opening Time: {info[i].opening_time}</Card.Text>\n                            <Card.Text>Closing_time: {info[i].closing_time}</Card.Text>\n                            <Card.Text>Address: {info[i].address}</Card.Text>\n                        </Card.Body>\n                    </Card>\n                    </CardDeck><br></br>\n                </div>\n                )\n            }\n        }\n        this.setState({LocatedHospital: listItems})\n    }\n\n    render(){\n        const pincodes = []\n        const uniqueChars = []\n        for (let i = 0; i < this.state.HospitalInfo.length; i++) {\n            pincodes.push(\n                this.state.HospitalInfo[i].address.substr(this.state.HospitalInfo[i].address.length - 6)\n            )\n        }\n        pincodes.forEach((c) => {\n            if (!uniqueChars.includes(c)) {\n                uniqueChars.push(c);\n            }\n        });\n        console.log(uniqueChars)\n\n        const info = []\n        \n        for (let i = 0; i < uniqueChars.length; i++) {\n            info.push(\n                <option value= {uniqueChars[i]}>\n                    {uniqueChars[i]}\n                </option>\n            )\n        }\n        \n        if(info.length === 0){\n            info.push(<option>No available</option>)\n        }\n        return(\n            <Container>\n            <Container>\n                <Jumbotron>\n                    <h1>Locate Pharmacy</h1><hr></hr>\n                    <Form.Group>\n                        <Form.Label>Select Pincode</Form.Label>\n                        <Form.Control as=\"select\" required type=\"number\" placeholder=\"Enter Pincode\" onChange={this.onChangePincode.bind(this)}>\n                            <option disabled selected value> -- select an option -- </option>\n                            {info}\n                        </Form.Control>\n                    </Form.Group>\n                </Jumbotron>\n            </Container>\n            <Container>\n                <Jumbotron>\n                    {this.state.LocatedHospital}\n                </Jumbotron>\n            </Container>\n            </Container>\n        )\n    }\n}\n\nexport{\n    HospitalLocator,\n    PharmacyLocator,\n}","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/Analysis.js",["88","89","90","91"],"import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Jumbotron,\n    Container,\n} from 'react-bootstrap';\n\n\n\nclass AgePie extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            options: {\n                labels: ['0-18', '19-58', '59+'],\n                title: {\n                    text: \"Age Division\",\n                    align: 'left',\n                    margin: 10,\n                    offsetX: 0,\n                    offsetY: 0,\n                    floating: false,\n                    style: {\n                      fontSize:  '25px',\n                      fontWeight:  'bold',\n                      fontFamily:  undefined,\n                      color:  '#263238'\n                    },\n                },\n            },\n            series: [0, 0, 0],\n            labels: ['0-18', '19-58', '59+'],\n            citizenInfo: [{}, {}]\n        }\n    }\n\n    componentDidMount(){\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/viewstats`, {\n        })\n        .then(res => {\n            this.setState({ citizenInfo: res.data });\n            console.log(this.state.citizenInfo)\n            this.counter();\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    counter(){\n        var a = 0;\n        var b = 0;\n        var c = 0;\n        var x = {};\n\n        for(x in this.state.citizenInfo){\n            if (this.state.citizenInfo[x].age){\n                if(this.state.citizenInfo[x].age <= 18){\n                    a++;\n                }\n                else if(this.state.citizenInfo[x].age >= 19 && this.state.citizenInfo[x].age <= 58){\n                    b++;  \n                }\n                else if(this.state.citizenInfo[x].age >= 59){\n                    c++;\n                }\n            }\n        }\n\n        this.setState({series: [a, b, c]});\n    }\n\n    render() {\n        const divStyle = {\n            display: 'block',\n            width: 'max-content',\n            margin: '20px auto',\n        };\n        return (\n        <div style={divStyle}>\n            <Container>\n                <Jumbotron>\n                    <Chart options={this.state.options} series={this.state.series} type=\"donut\" width=\"500\" />\n                </Jumbotron>\n            </Container>\n            </div>\n        );\n    }\n}\n\n\nclass BmiPie extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            options: {\n                labels: ['Underweight (Below 18.5)', 'Healthy Weight (18.5 to 24.9)', 'Overweight(25.0 to 29.9)', 'Obese (30.0 and above)'],\n                title: {\n                    text: \"BMI Analysis\",\n                    align: 'left',\n                    margin: 10,\n                    offsetX: 0,\n                    offsetY: 0,\n                    floating: false,\n                    style: {\n                      fontSize:  '25px',\n                      fontWeight:  'bold',\n                      fontFamily:  undefined,\n                      color:  '#263238'\n                    },\n                },\n            },\n            series: [0, 0, 0, 0],\n            labels: ['Underweight (Below 18.5)', 'Healthy Weight (18.5 to 14.9)', 'Overweight(25.0 to 29.9)', 'Obese (30.0 and above)'],\n            citizenInfo: [{}, {}]\n        }\n    }\n\n    componentDidMount(){\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/viewstats`, {\n        })\n        .then(res => {\n            this.setState({ citizenInfo: res.data });\n            console.log(this.state.citizenInfo)\n            this.counter();\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    counter(){\n        var a = 0;\n        var b = 0;\n        var c = 0;\n        var d = 0;\n        var x = {};\n\n        for(x in this.state.citizenInfo){\n            if (this.state.citizenInfo[x].bmi){\n                if(this.state.citizenInfo[x].bmi < 18.5){\n                    a++;\n                }\n                else if(this.state.citizenInfo[x].bmi >= 18.5 && this.state.citizenInfo[x].bmi < 25){\n                    b++;  \n                }\n                else if(this.state.citizenInfo[x].bmi >= 25.0 && this.state.citizenInfo[x].bmi < 30){\n                    c++;\n                }\n                else if(this.state.citizenInfo[x].bmi >= 30){\n                    d++;\n                }\n            }\n        }\n\n        this.setState({series: [a, b, c, d]});\n    }\n\n    render() {\n        const divStyle = {\n            display: 'block',\n            width: 'max-content',\n            margin: '20px auto',\n        };\n        return (\n        <div style={divStyle}>\n            <Container>\n                <Jumbotron>\n                    <Chart options={this.state.options} series={this.state.series} type=\"donut\" width=\"600\" />\n                </Jumbotron>\n            </Container>\n        </div>\n        );\n    }\n}\n\n\nclass BedsBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options: {\n                chart: {\n                    id: \"basic-bar\"\n                },\n                xaxis: {\n                    categories: []\n                    // hosp names here\n                },\n                title: {\n                    text: \"Number of Beds available\",\n                    align: 'left',\n                    margin: 10,\n                    offsetX: 10,\n                    offsetY: 0,\n                    floating: false,\n                    style: {\n                      fontSize:  '25px',\n                      fontWeight:  'bold',\n                      fontFamily:  undefined,\n                      color:  '#263238'\n                    },\n                },\n            },\n            series: [\n                {\n                    name: \"series-1\",\n                    data: [],\n                    // number of beds here\n                }\n            ],\n            hospInfo: [{}, {}]\n        };\n    }\n\n    componentDidMount(){\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/hospital/viewstats`, {\n        })\n        .then(res => {\n            this.setState({ hospInfo: res.data });\n            console.log(this.state.hospInfo);\n            this.counter();\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    counter(){\n        var x = {};\n        var names = [];\n        var beds = [];\n\n        for(x in this.state.hospInfo){\n            if (this.state.hospInfo[x].name){\n                names[x] = this.state.hospInfo[x].name;\n                beds[x] = this.state.hospInfo[x].no_of_beds;\n            }\n        }\n\n        this.setState({options: {xaxis: {categories: names}}, series: [{name: \"No. of Beds\", data: beds}]});\n    }\n\n    render() {\n        const divStyle = {\n            display: 'block',\n            width: 'max-content',\n            margin: '20px auto',\n        };\n        return (\n            <div style={divStyle}>\n\n            \n            <div className=\"app\">\n            <div className=\"row\">\n                <div className=\"mixed-chart\">\n                \n                <Container>\n                    <Jumbotron>\n                    <Chart\n                        options={this.state.options}\n                        series={this.state.series}\n                        type=\"bar\"\n                        width=\"500\"\n                    />\n                    </Jumbotron>\n                </Container>\n                </div>\n            </div>\n            </div>\n            </div>\n        );\n    }\n}\n\n\nclass CheckupPie extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            options: {\n                labels: ['Last 1 Month', 'Last 2 to 3 Months', 'Beyond 3 months'],\n                title: {\n                    text: \"Last Health Check-up\",\n                    align: 'left',\n                    margin: 10,\n                    offsetX: 0,\n                    offsetY: 0,\n                    floating: false,\n                    style: {\n                      fontSize:  '25px',\n                      fontWeight:  'bold',\n                      fontFamily:  undefined,\n                      color:  '#263238'\n                    },\n                },\n            },\n            series: [0, 0, 0],\n            labels: ['Last 1 Month', 'Last 2 to 3 Months', 'Beyond 3 months'],\n            citizenInfo: [{}, {}]\n        }\n    }\n\n    componentDidMount(){\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/viewstats`, {\n        })\n        .then(res => {\n            this.setState({ citizenInfo: res.data });\n            console.log(this.state.citizenInfo)\n            this.counter();\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n    diff_months(dt2, dt1) {\n        var diff =(dt2.getTime() - dt1.getTime()) / 1000;\n        diff /= (60 * 60 * 24 * 7 * 4);\n        return Math.abs(Math.round(diff));\n    }\n\n    counter(){\n        var a = 0;\n        var b = 0;\n        var c = 0;\n        var x = {};\n        var d = new Date();\n\n        for(x in this.state.citizenInfo){\n            if (this.state.citizenInfo[x].last_checkup_date){\n\n                var temp = new Date(this.state.citizenInfo[x].last_checkup_date);\n                var diff = this.diff_months(d, temp);\n                if(diff == 0 || diff == 1)\n                    a++;\n                else if(diff == 2 || diff == 3)\n                    b++;\n                else if(diff > 3)\n                    c++;\n            }\n        }\n\n        this.setState({series: [a, b, c]});\n    }\n\n    render() {\n        const divStyle = {\n            display: 'block',\n            width: 'max-content',\n            margin: '20px auto',\n        };\n        return (\n        <div style={divStyle}>\n            <Container>\n                <Jumbotron>\n                    <Chart options={this.state.options} series={this.state.series} type=\"donut\" width=\"600\" />\n                </Jumbotron>\n            </Container>\n        </div>\n        );\n    }\n}\n\nclass AllCharts extends Component {\n    render(){\n        const outerouter = {\n            width:\"75%\",\n            margin: \"0px auto\"\n        }\n        const outer = {\n            display:'flex',\n            flexWrap: 'wrap',\n        }\n        return(\n            <div style={outerouter}>\n                <Jumbotron>\n                    <div style={outer}>\n                        <div>\n                            <AgePie/>\n                        </div>\n                        <div>\n                            <BmiPie/>\n                        </div>\n                        <div>\n                            <CheckupPie/>\n                        </div>\n                        <div>\n                            <BedsBar/>\n                        </div>\n                    </div>\n                    \n                </Jumbotron>\n            </div>\n        )\n    }\n}\n\nexport {\n    AgePie,\n    BmiPie,\n    BedsBar,\n    CheckupPie,\n    AllCharts,\n};","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/CreateCitizenProfile.js",[],{"ruleId":"92","severity":1,"message":"93","line":4,"column":16,"nodeType":"94","messageId":"95","endLine":4,"endColumn":29},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"92","severity":1,"message":"100","line":1,"column":15,"nodeType":"94","messageId":"95","endLine":1,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":255,"column":7,"nodeType":"103","messageId":"104","endLine":255,"endColumn":22},{"ruleId":"101","severity":1,"message":"102","line":304,"column":7,"nodeType":"103","messageId":"104","endLine":304,"endColumn":22},{"ruleId":"105","severity":1,"message":"106","line":60,"column":37,"nodeType":"107","messageId":"104","endLine":60,"endColumn":39},{"ruleId":"108","severity":1,"message":"109","line":67,"column":9,"nodeType":"110","endLine":67,"endColumn":19},{"ruleId":"108","severity":1,"message":"109","line":66,"column":9,"nodeType":"110","endLine":66,"endColumn":19},{"ruleId":"105","severity":1,"message":"106","line":47,"column":42,"nodeType":"107","messageId":"104","endLine":47,"endColumn":44},{"ruleId":"105","severity":1,"message":"106","line":153,"column":42,"nodeType":"107","messageId":"104","endLine":153,"endColumn":44},{"ruleId":"105","severity":1,"message":"106","line":340,"column":25,"nodeType":"107","messageId":"104","endLine":340,"endColumn":27},{"ruleId":"105","severity":1,"message":"106","line":340,"column":38,"nodeType":"107","messageId":"104","endLine":340,"endColumn":40},{"ruleId":"105","severity":1,"message":"106","line":342,"column":30,"nodeType":"107","messageId":"104","endLine":342,"endColumn":32},{"ruleId":"105","severity":1,"message":"106","line":342,"column":43,"nodeType":"107","messageId":"104","endLine":342,"endColumn":45},"no-unused-vars","'AppWithRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["111"],"no-negated-in-lhs",["112"],"'useState' is defined but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]