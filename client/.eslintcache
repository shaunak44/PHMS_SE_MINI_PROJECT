[{"/home/shaunak/SE/SE_Project/client/src/index.js":"1","/home/shaunak/SE/SE_Project/client/src/App1.js":"2","/home/shaunak/SE/SE_Project/client/src/reportWebVitals.js":"3","/home/shaunak/SE/SE_Project/client/src/services/Login.js":"4","/home/shaunak/SE/SE_Project/client/src/services/signUp.js":"5","/home/shaunak/SE/SE_Project/client/src/services/CitizenProfile.js":"6","/home/shaunak/SE/SE_Project/client/src/services/RegisterHospital.js":"7","/home/shaunak/SE/SE_Project/client/src/services/RegisterOperator.js":"8","/home/shaunak/SE/SE_Project/client/src/services/RegisterDoctor.js":"9","/home/shaunak/SE/SE_Project/client/src/services/CreateCitizenProfile.js":"10","/home/shaunak/SE/SE_Project/client/src/services/Chatbot.js":"11","/home/shaunak/SE/SE_Project/client/src/services/RegisterPharmacy.js":"12","/home/shaunak/SE/SE_Project/client/src/services/LoginPharmacyOperator.js":"13","/home/shaunak/SE/SE_Project/client/src/services/LoginDoctor.js":"14","/home/shaunak/SE/SE_Project/client/src/services/LoginHospitalOperator.js":"15","/home/shaunak/SE/SE_Project/client/src/services/FAQ.js":"16","/home/shaunak/SE/SE_Project/client/src/services/Analysis.js":"17"},{"size":521,"mtime":1618723692589,"results":"18","hashOfConfig":"19"},{"size":6313,"mtime":1618913350665,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1612081859868,"results":"21","hashOfConfig":"19"},{"size":3963,"mtime":1618912976312,"results":"22","hashOfConfig":"19"},{"size":4428,"mtime":1619345300338,"results":"23","hashOfConfig":"19"},{"size":1830,"mtime":1618912976312,"results":"24","hashOfConfig":"19"},{"size":4925,"mtime":1618912976312,"results":"25","hashOfConfig":"19"},{"size":3626,"mtime":1618912976312,"results":"26","hashOfConfig":"19"},{"size":3915,"mtime":1618912976312,"results":"27","hashOfConfig":"19"},{"size":18495,"mtime":1619362305650,"results":"28","hashOfConfig":"19"},{"size":1720,"mtime":1619352613143,"results":"29","hashOfConfig":"19"},{"size":4987,"mtime":1618912976312,"results":"30","hashOfConfig":"19"},{"size":15138,"mtime":1619352581634,"results":"31","hashOfConfig":"19"},{"size":10223,"mtime":1619331951286,"results":"32","hashOfConfig":"19"},{"size":12022,"mtime":1618912976312,"results":"33","hashOfConfig":"19"},{"size":2952,"mtime":1619345579302,"results":"34","hashOfConfig":"19"},{"size":9717,"mtime":1619345541030,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1hvvxb4",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"39"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"39"},"/home/shaunak/SE/SE_Project/client/src/index.js",["80"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App1, { AppWithRouter } from './App1';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App1/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["81","82"],"/home/shaunak/SE/SE_Project/client/src/App1.js",[],"/home/shaunak/SE/SE_Project/client/src/reportWebVitals.js",[],"/home/shaunak/SE/SE_Project/client/src/services/Login.js",[],"/home/shaunak/SE/SE_Project/client/src/services/signUp.js",["83"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport {\n    Form,\n    Button,\n    Jumbotron,\n    Container\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport validator from 'validator'\n\nexport default class SignUp extends Component{\n    constructor(props) {\n        super(props)\n\n        // this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        // this.onChangeEmail = this.onChangeEmail.bind(this);\n        // this.onChangePassword = this.onChangePassword.bind(this);\n        // this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            aadhaar_id: '',\n            email_id: '',\n            password: '',\n            errorPassword:'',\n        }\n    }\n\n    onChangeAadhaar(e){\n        console.log(e.target.value);\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onChangeEmail(e){\n        console.log(e.target.value);\n        this.setState({email_id: e.target.value})\n    }\n\n    onChangePassword(e){\n        console.log(e.target.value);\n        if (validator.isStrongPassword(e.target.value, {\n            minLength: 8, minLowercase: 1,\n            minUppercase: 1, minNumbers: 1, minSymbols: 1\n          })) {\n            this.setState({errorPassword: \"Strong Password\"})  \n          } else {\n            this.setState({errorPassword: \"Week Password\"})  \n          }\n          this.setState({password: e.target.value})\n    }\n\n    onSubmit(e){\n\n        console.log(e);\n        e.preventDefault();\n\n        if(this.state.errorPassword == \"Week Password\"){\n            toast('Week password')\n            return;\n        }\n\n        const userObject = {\n            aadhaar_id : this.state.aadhaar_id,\n            email_id : this.state.email_id,\n            password : this.state.password\n        };\n        \n        console.log(userObject)\n\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/signup`, userObject)\n        .then((res) => {\n            console.log(res.data.token)\n\n            // Save data to sessionStorage\n            sessionStorage.setItem('token', res.data.token);\n\n            // Get saved data from sessionStorage\n            let data = sessionStorage.getItem('token');\n\n            console.log(data)\n             toast(\"Sucessfully signed up\");\n\n        }).catch((error) => {\n            console.log(error)\n            toast(\"Invalid cred or already registered\");\n        });\n\n        this.setState({ aadhaar_id: '', email_id: '', password: ''});\n\n    }\n\n   \n    render(){\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Register</h2>\n                    <Form onSubmit={this.onSubmit.bind(this)}>\n\n                        <Form.Group>\n                            <Form.Label>Aadhar ID</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Aadhar Number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar.bind(this)} Min=\"100000000000\" Max=\"999999999999\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control required type=\"email\" placeholder=\"Enter email\" value={this.state.email_id} onChange={this.onChangeEmail.bind(this)} />\n                            <Form.Text className=\"text-muted\">\n                            We'll never share your email with anyone else.\n                            </Form.Text>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control required onChange={this.onChangePassword.bind(this)} value={this.state.password} type=\"password\" placeholder=\"Password\" />\n                            <Form.Text className=\"text-muted\">\n                            {this.state.errorPassword}\n                            </Form.Text>    \n                        </Form.Group>\n\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                        <ToastContainer />\n                    </Form>\n                </Jumbotron>\n            </Container> \n        )\n    }\n\n}","/home/shaunak/SE/SE_Project/client/src/services/CitizenProfile.js",["84","85"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport {\n    Container,\n    Button,\n    ButtonGroup,\n    ButtonToolbar\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class CitizenProfile extends Component{\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            usersCollection: []\n        }\n    }\n\n    componentDidMount() {\n        let data = sessionStorage.getItem('token');\n        console.log(data, typeof(data))\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/me`, {\n            headers:{\n                'token': data\n            }\n        })\n            .then(res => {\n                this.setState({ usersCollection: res.data });\n                //console.log(this.state.usersCollection)\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    render(){\n        return(\n            <Container>\n                <h2>\n                    Welcome User With aadhaar {this.state.usersCollection.aadhaar_id}\n                </h2>\n                <hr></hr>\n                <Container>\n                    <Button block href=\"/citizen/createprofile\" size='lg' variant='primary'>Create Profile</Button>{'  '}\n                    <Button block href=\"/citizen/viewprofile\" size='lg' variant='secondary'>View Profile</Button>{'  '}\n                    <Button block href=\"/citizen/bookappointment\" size='lg' variant='success'>Book Appointment</Button>{'  '}\n                    <Button block href=\"/citizen/checkappointment\" size='lg' variant='info'>Check Appointments</Button>{'  '}\n                    <Button block href=\"/logout\" size='lg' variant='danger'>Logout</Button>{'  '}\n                </Container>\n            </Container> \n        )\n    }\n}","/home/shaunak/SE/SE_Project/client/src/services/RegisterHospital.js",[],"/home/shaunak/SE/SE_Project/client/src/services/RegisterOperator.js",[],"/home/shaunak/SE/SE_Project/client/src/services/RegisterDoctor.js",[],"/home/shaunak/SE/SE_Project/client/src/services/CreateCitizenProfile.js",["86"],"/home/shaunak/SE/SE_Project/client/src/services/Chatbot.js",["87","88","89","90"],"import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    Container, Jumbotron, Form, Button\n} from 'react-bootstrap'\n\nexport default class Chatbot extends Component{\n    talk(event){\n        var know = {\n            \"hello\": \"Hello I Am A Simple Chatbot. I Am Here To Help You!\",\n            \"hi\": \"Hii, Tell me something about yourself ??\",\n            \"how are you?\": \"I am great !!\",\n            \"life is like hell\": \"Are you in TY COMP at COEP ?\",\n            \"tell me a random fact\": \"Life would have been much easy, if there was no Abhijit Sir.\",\n            \"bye\": \"Bye ! Have A Great Day !!\"\n        }\n        console.log(event);\n        if(event.keyCode === 13){\n            \n            var user = document.getElementById(\"userbox\").value\n            document.getElementById(\"userbox\").value = \"\"\n            document.getElementById(\"chatLog\").innerHTML += user + \"<br>\"\n            \n            if(user in know){\n                document.getElementById(\"chatLog\").innerHTML += \"> \" + know[user] + \"<br><br>\"\n            }\n            else{\n                document.getElementById(\"chatLog\").innerHTML += \"> \" + \"Sorry I Can't Understand. <br><br>\"\n            }\n        }\n    }\n    render() {\n        return (\n            <Container>\n                <Jumbotron>\n                    <h2>CHATBOT</h2><hr></hr>\n                    <h4 id=\"chatLog\"></h4>\n                    <Form.Group>\n                        <Form.Control id=\"userbox\" type=\"text\" onKeyDown={this.talk} placeholder=\"Ask Your Queries\" />\n                    </Form.Group>\n                    <h3>Hello I am CHABOT, Ask me your queries !</h3>\n                </Jumbotron>\n            </Container>\n        )\n    }\n}\n","/home/shaunak/SE/SE_Project/client/src/services/RegisterPharmacy.js",[],"/home/shaunak/SE/SE_Project/client/src/services/LoginPharmacyOperator.js",["91"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {Redirect, Link,} from 'react-router-dom';\nimport {\n    Form,\n    Button,\n    Jumbotron,\n    Container,\n    Card,\n    CardDeck\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport moment from 'moment';\n\n\n\nconst REDIRECT_PATH_LOGIN = 'pharmacyoperator/dashboard'\n\n\n\nclass PharmacyOperatorLogin extends Component{\n    constructor(props) {\n        super(props)\n\n        this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            aadhaar_id: '',\n            password: '',\n            redirect_flag: false\n        }\n    }\n\n    onChangeAadhaar(e){\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onChangePassword(e){\n        this.setState({password: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n\n        const userObject = {\n            aadhaar_id : this.state.aadhaar_id,\n            password : this.state.password\n        };\n        sessionStorage.setItem('aadhaar_id_pharmacy', this.state.aadhaar_id)\n        console.log(userObject)\n\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/operator/pharmacylogin`, userObject)\n        .then((res) => {\n            console.log(res.data.token)\n\n            // Save data to sessionStorage\n            sessionStorage.setItem('token', res.data.token);\n\n            // Get saved data from sessionStorage\n            let data = sessionStorage.getItem('token');\n\n            console.log(data)\n\n            this.setState({redirect_flag: true}) \n            \n        \n        }).catch((error) => {\n            console.log(error)\n            toast.error('Invalid credentials')\n        });\n\n        this.setState({ aadhaar_id: '', password: '', redirect_flag: false});\n\n    }\n\n   \n    render(){\n        var isRedirect = this.state.redirect_flag;\n        let redirection_html = '';\n        if(isRedirect){\n            redirection_html = <Redirect to={REDIRECT_PATH_LOGIN}/>\n        }\n        else{\n            redirection_html = \"\";\n        }\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Login As Pharmacy Operator</h2>\n                    <Form onSubmit={this.onSubmit.bind(this)}>\n\n                        <Form.Group>\n                            <Form.Label>Aadhar ID</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Aadhar Number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar.bind(this)} Min=\"100000000000\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control required onChange={this.onChangePassword.bind(this)} value={this.state.password} type=\"password\" placeholder=\"Password\" />\n                        </Form.Group>\n\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                        <ToastContainer/>\n                    </Form>\n                </Jumbotron>\n                {redirection_html}\n            </Container> \n        )\n    }\n}\n\nclass PharmacyOperatorDashboard extends Component{\n    constructor(props) {\n        super(props)\n        this.onClickAddStocks = this.onClickAddStocks.bind(this)\n        this.onClickShowStocks = this.onClickShowStocks.bind(this)\n        this.onClickUpdateStocks = this.onClickUpdateStocks.bind(this)\n        this.state = {\n            operatorInfo: '',\n            showAddStock: false,\n            showShowStock: false,\n            showUpdateStock: false,\n        }\n        \n    }\n\n    onClickAddStocks(e){\n        e.preventDefault();\n        if(!this.state.showAddStock)\n            this.setState({showAddStock:true})\n        else\n            this.setState({showAddStock: false})\n    }\n\n    onClickShowStocks(e){\n        e.preventDefault();\n        if(!this.state.showShowStock)\n            this.setState({showShowStock:true})\n        else\n            this.setState({showShowStock:false})\n    }\n    onClickUpdateStocks(e){\n        e.preventDefault();\n        if(!this.state.showUpdateStock)\n            this.setState({showUpdateStock:true})\n        else\n            this.setState({showUpdateStock:false})\n    }\n\n    componentDidMount(){\n        let aadhaar_id = sessionStorage.getItem('aadhaar_id_pharmacy')\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/operator/pharmacyme`, {\n            headers:{\n                'aadhaar_id': aadhaar_id\n            }\n        })\n        .then(res => {\n            this.setState({ operatorInfo: res.data });\n            console.log(this.state.operatorInfo)\n            sessionStorage.setItem('store_id', this.state.operatorInfo[0].store_id)\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    render(){\n        return(\n            <Container>\n                <Jumbotron>\n                    <h3>Pharmacy Operator Dashboard</h3><hr></hr>\n                    <Button block onClick={this.onClickAddStocks} size='lg' variant='primary'>Add Stocks</Button>{this.state.showAddStock ? <AddStock user={this.state.operatorInfo} />: null}\n                    <Button block onClick={this.onClickShowStocks} size='lg' variant='warning'>Show Stocks</Button>{this.state.showShowStock ? <ShowStock user={this.state.operatorInfo} />: null}\n                    <Button block onClick={this.onClickUpdateStocks} size='lg' variant='success'>Update Or Delete Stocks</Button>{this.state.showUpdateStock ? <UpdateStock user={this.state.operatorInfo} />: null}\n                    <Button block href=\"/logout\" size='lg' variant='danger'>Logout</Button>{'  '}\n                </Jumbotron>\n            </Container>\n        )\n    }\n}\n\n\n\nexport{\n    PharmacyOperatorLogin,\n    PharmacyOperatorDashboard,\n}\n\nclass AddStock extends Component{\n    constructor(props) {\n        super(props)\n        this.onChangeDrugName = this.onChangeDrugName.bind(this)\n        this.onChangeExpiryDate = this.onChangeExpiryDate.bind(this)\n        this.onChangeQuantity = this.onChangeQuantity.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.state = {\n            store_id:'',\n            drug_name:'',\n            expiry_date:'',\n            quantity:'',\n        }\n        \n    }\n\n    onChangeDrugName(e){\n        this.setState({drug_name: e.target.value})\n    }\n\n    onChangeExpiryDate(e){\n        this.setState({expiry_date: e.target.value})\n    }\n\n    onChangeQuantity(e){\n        this.setState({quantity: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n        let store_id = sessionStorage.getItem('store_id')\n        console.log(store_id)\n        const userObject = {\n            store_id: store_id,\n            drug_name:this.state.drug_name,\n            expiry_date:this.state.expiry_date,\n            quantity:this.state.quantity,\n        }\n        console.log(userObject)\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/stock/addstock`, userObject)\n        .then((res) => {\n            console.log(res.data.message)\n            toast.success('New stock added')\n        }).catch((error) => {\n            console.log(error)\n            toast.success('Invalid details')\n        });\n\n        this.setState({\n            store_id:'',\n            drug_name:'',\n            expiry_date:'',\n            quantity:'',\n        });\n\n    }\n    render(){\n        return(\n            <Form onSubmit={this.onSubmit.bind(this)}>\n                <Form.Group>\n                    <Form.Label>Drug Name</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"Enter Drug Name\" value={this.state.drug_name} onChange={this.onChangeDrugName.bind(this)} />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Expiry Date</Form.Label>\n                    <Form.Control required type=\"date\" placeholder=\"Enter Expiry Date\" value={this.state.expiry_date} onChange={this.onChangeExpiryDate.bind(this)} min={moment().format(\"YYYY-MM-DD\")} />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Quantity</Form.Label>\n                    <Form.Control required type=\"number\" placeholder=\"Enter Quantity\" value={this.state.quantity} onChange={this.onChangeQuantity.bind(this)} />\n                </Form.Group>\n                \n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n                <ToastContainer/>\n            </Form>\n        )\n    }\n}\n\nclass ShowStock extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            stocksInfo:[]\n        }\n        \n    }\n\n    componentDidMount(){\n        let store_id = sessionStorage.getItem('store_id')\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/stock/showstock`, {\n            headers:{\n                'store_id': store_id\n            }\n        })\n        .then(res => {\n            this.setState({ stocksInfo: res.data });\n            console.log(this.state.stocksInfo)\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    render(){\n        const info = []\n        for (let i = 0; i < this.state.stocksInfo.length; i++) {\n            var d = new Date(this.state.stocksInfo[i].expiry_date);\n            d = String(d); \n            info.push(\n                <Card>\n                    <Card.Body>\n                        <Card.Title>{this.state.stocksInfo[i].drug_name}</Card.Title>\n                        <Card.Text>\n                            Expiry Date: {d}\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        Quantity: {this.state.stocksInfo[i].quantity}\n                    </Card.Footer>\n                </Card>\n            )\n        }\n        return(\n            <CardDeck>\n                {info}\n            </CardDeck>\n        )\n    }\n}\n\nclass UpdateStock extends Component{\n    constructor(props) {\n        super(props)\n        this.onChangeDrugName = this.onChangeDrugName.bind(this)\n        this.onChangeExpiryDate = this.onChangeExpiryDate.bind(this)\n        this.onChangeQuantity = this.onChangeQuantity.bind(this)\n        this.onClickUpdate = this.onClickUpdate.bind(this)\n        this.onClickDelete = this.onClickDelete.bind(this)\n        this.state = {\n            stocksInfo:[],\n            drug_name:'',\n            expiry_date:'',\n            quantity:'',\n        }\n        \n    }\n\n    componentDidMount(){\n        let store_id = sessionStorage.getItem('store_id')\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/stock/showstock`, {\n            headers:{\n                'store_id': store_id\n            }\n        })\n        .then(res => {\n            this.setState({ stocksInfo: res.data });\n            console.log(this.state.stocksInfo)\n            if(this.state.stocksInfo.length >= 1){\n                this.setState({drug_name:this.state.stocksInfo[0].drug_name})\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    onChangeDrugName(e){\n        this.setState({drug_name: e.target.value})\n    }\n\n    onChangeExpiryDate(e){\n        this.setState({expiry_date: e.target.value})\n    }\n\n    onChangeQuantity(e){\n        this.setState({quantity: e.target.value})\n    }\n\n    onClickUpdate(e){\n        e.preventDefault();\n        let store_id = sessionStorage.getItem('store_id')\n        console.log(store_id)\n        const userObject = {\n            store_id: store_id,\n            drug_name:this.state.drug_name,\n            expiry_date:this.state.expiry_date,\n            quantity:this.state.quantity,\n        }\n        console.log(userObject)\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/stock/updatestock`, userObject)\n        .then((res) => {\n            console.log(res.data.message)\n            toast.success('Stock updated')\n        }).catch((error) => {\n            console.log(error)\n            toast.error('Invalid details')\n        });\n\n        this.setState({\n            store_id:'',\n            expiry_date:'',\n            quantity:'',\n        });\n    }\n\n    onClickDelete(e){\n        e.preventDefault();\n        let store_id = sessionStorage.getItem('store_id')\n        console.log(store_id)\n        const userObject = {\n            store_id: store_id,\n            drug_name:this.state.drug_name,\n            expiry_date:this.state.expiry_date,\n            quantity:this.state.quantity,\n        }\n        console.log(userObject)\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/stock/deletestock`, userObject)\n        .then((res) => {\n            console.log(res.data.message)\n            toast.success('Stock Deleted')\n        }).catch((error) => {\n            console.log(error)\n            toast.error('Invalid details')\n        });\n\n        this.setState({\n            store_id:'',\n            expiry_date:'',\n            quantity:'',\n        });\n    }\n\n    render(){\n        const info = []\n        for (let i = 0; i < this.state.stocksInfo.length; i++) {\n            info.push(\n                <option value= {this.state.stocksInfo[i].drug_name}>\n                    {this.state.stocksInfo[i].drug_name}\n                </option>\n            )\n        }\n        if(info.length === 0){\n            info.push(<option>Stock Empty</option>)\n        }\n        \n        return(\n            <Container>\n                <Jumbotron>\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Select Drug Name</Form.Label>\n                        <Form.Control as=\"select\" name=\"drug_name\" id=\"drug_name\" value={this.state.drug_name} onChange={this.onChangeDrugName.bind(this)}>\n                            {info}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Expiry Date</Form.Label>\n                        <Form.Control required type=\"date\" value={this.state.expiry_date} onChange={this.onChangeExpiryDate.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Quantity</Form.Label>\n                        <Form.Control required type=\"number\" placeholder=\"Enter Quantity\" value={this.state.quantity} onChange={this.onChangeQuantity.bind(this)}/>\n                    </Form.Group>\n\n                    <Button onClick={this.onClickUpdate} variant=\"success\">Update</Button>{' '}\n                    <Button onClick={this.onClickDelete} variant=\"danger\">Delete</Button>\n                    <ToastContainer/>\n                </Jumbotron>\n            </Container>\n        )\n    }\n}","/home/shaunak/SE/SE_Project/client/src/services/LoginDoctor.js",["92","93","94"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Redirect, Link,} from 'react-router-dom';\nimport { selectFields } from 'express-validator/src/select-fields';\nimport { compare } from 'bcryptjs';\nimport {\n    Form,\n    Button,\n    Jumbotron,\n    Container,\n    Card\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport emailjs from 'emailjs-com';\n\nconst REDIRECT_PATH_LOGIN = 'doctor/dashboard'\n\nclass DoctorLogin extends Component{\n    constructor(props) {\n        super(props)\n\n        this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            aadhaar_id: '',\n            password: '',\n            redirect_flag: false\n        }\n\n\n    }\n\n    onChangeAadhaar(e){\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onChangePassword(e){\n        this.setState({password: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n\n        const userObject = {\n            aadhaar_id : this.state.aadhaar_id,\n            password : this.state.password\n        };\n        \n        sessionStorage.setItem('doctor_aadhaar_id', this.state.aadhaar_id);\n        console.log(userObject)\n\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/doctor/login`, userObject)\n        .then((res) => {\n            // Save data to sessionStorage\n            this.setState({redirect_flag: true}) \n        }).catch((error) => {\n            console.log(error)\n            toast.error('Invalid creds')\n        });\n\n        this.setState({ aadhaar_id: '', password: '', redirect_flag: false});\n\n    }\n\n   \n    render(){\n        var isRedirect = this.state.redirect_flag;\n        let redirection_html = '';\n        if(isRedirect){\n            redirection_html = <Redirect to={REDIRECT_PATH_LOGIN}/>\n        }\n        else{\n            redirection_html = \"\";\n        }\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Login As Doctor</h2>\n                    <Form onSubmit={this.onSubmit.bind(this)}>\n\n                        <Form.Group>\n                            <Form.Label>Aadhar ID</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Aadhar Number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar.bind(this)} Min=\"100000000000\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control required onChange={this.onChangePassword.bind(this)} value={this.state.password} type=\"password\" placeholder=\"Password\" />\n                        </Form.Group>\n\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                        <ToastContainer/>\n                    </Form>\n                </Jumbotron>\n                {redirection_html}\n            </Container> \n        )\n    }\n}\n\nclass DoctorDashboard extends Component{\n    constructor(props) {\n        super(props);\n        this.onClickViewPatientProfile = this.onClickViewPatientProfile.bind(this);\n        this.onClickViewAppointment = this.onClickViewAppointment.bind(this);\n        this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        this.state = {\n            aadhaar_id:'',\n            showData: false,\n            doctor_id:'',\n            showAppointment: false\n        }\n        this.state = {\n            usersCollection:'',\n            doctorCollection:'',\n            appointmentCollection: '',\n        }\n    }\n\n\n    onClickViewPatientProfile(e) {\n        e.preventDefault();\n        this.setState({showData:false})\n        console.log(this.state.aadhaar_id)\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/doctor/viewpatient`, {\n            headers:{\n                'aadhaar_id': this.state.aadhaar_id\n            }\n        })\n        .then(res => {\n            this.setState({ usersCollection: res.data });\n            console.log(this.state.usersCollection)\n            this.setState({showData:true})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n    \n\n    async onClickViewAppointment(e) {\n        e.preventDefault();\n        let doctor_aadhaar_id = sessionStorage.getItem('doctor_aadhaar_id')\n        console.log(doctor_aadhaar_id);\n        await axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/doctor/doctorInfo`, {\n            headers:{\n                'aadhaar_id': doctor_aadhaar_id,\n            }\n        })\n        .then(res => {\n            this.setState({doctorCollection: res.data})\n            this.setState({doctor_id: this.state.doctorCollection[0].doctor_id})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n\n        await axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/appointment/doctorappointmentinfo`, {\n            headers:{\n                'doctor_id': this.state.doctor_id\n            }\n        })\n        .then(res => {\n            this.setState({ appointmentCollection: res.data });\n            console.log(this.state.appointmentCollection)\n            this.setState({showAppointment:true})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    \n    onChangeAadhaar(e){\n        this.setState({aadhaar_id: e.target.value})\n    }   \n    render(){\n        return(\n            <Container>\n                <Container>\n                    <Jumbotron>\n                        <h3>Doctor Dashboard</h3> <hr></hr>\n                        <Form.Group>\n                            <Form.Label>Enter Aadhaar Id of Patient</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Aadhaar Id of Patient\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar.bind(this)}/>\n                        </Form.Group>\n                        <Button block onClick={this.onClickViewPatientProfile} size='lg' variant='info'>View Patient Profile</Button>{this.state.showData ? <DisplayPatientData user={this.state.usersCollection} />: null}\n                        </Jumbotron>\n                </Container>\n                <Container>\n                <Jumbotron>\n                    <Button block onClick={this.onClickViewAppointment} size='lg' variant='dark'>Appointment Details</Button>{this.state.showAppointment? <DisplayAppointments user={this.state.appointmentCollection}/>: null}\n                    <Button block href=\"/logout\" size='lg' variant='danger'>Logout</Button>{'  '}\n                </Jumbotron>\n                <ToastContainer/>\n                </Container>\n            </Container>\n        )\n    }\n}\n\n\nexport{\n    DoctorLogin,\n    DoctorDashboard,\n}\n\nfunction DisplayPatientData(props) {\n    if(props.user[0]){\n        console.log(props);\n        \n        return (\n            <Card>\n                <Card.Body>\n                    <blockquote className=\"blockquote mb-0\">\n                        <h4>Aadhaar: {props.user[0].aadhaar_id}</h4>\n                        <h4>Name: {props.user[0].name}</h4>\n                        <h4>Age: {props.user[0].age}</h4>\n                        <h4>BMI: {props.user[0].bmi}</h4>\n                        <h4>Last checkup date: {props.user[0].last_checkup_date ? <>{props.user[0].last_checkup_date.substring(0, 10)}</>: null}</h4>\n                        <h4>Spo2: {props.user[0].spo2}</h4>\n                        <h4>Comorbidity: {props.user[0].comorbidity}</h4>\n                    </blockquote>\n                </Card.Body>\n            </Card>\n        );\n    }\n    else{\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Nothing To Show</h2>\n                </Jumbotron>\n            </Container>\n        )\n    }\n}\n\nclass DisplayAppointments extends Component {\n    constructor(props) {\n        super(props);\n        this.onClickConfirm = this.onClickConfirm.bind(this);\n    }\n\n\n    onClickConfirm(i, e){\n        e.preventDefault()\n        console.log(i)\n        const userObject = {\n            aadhaar_id : i.aadhaar_id,\n            doctor_id : i.doctor_id,\n            slot: i.slot,\n        };\n        \n        console.log(userObject)\n\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/appointment/confirmstatus`, userObject)\n        .then((res) => {\n            console.log(res.data);\n\n            var templateParams = {\n                to_email: res.data.user[0].email_id,\n                to_name: res.data.user[0].name,\n                message:'Your appointment is confirmed.'\n            };\n            emailjs.send('service_nsema9w', 'template_a1xy8li', templateParams, 'user_vHmTSugteuDoVDXBeI5sc')\n            .then(function(response) {\n                console.log('SUCCESS!', response.status, response.text);\n                toast.success('Mail sent to Patient')\n            }, function(error) {\n                console.log('FAILED...', error);\n            });\n        \n        }).catch((error) => {\n            console.log(error)\n        });\n\n    }\n\n    render(){\n        if(this.props.user.length === 0){\n            return(\n                <Container>\n                    <Jumbotron>\n                        <h3>No appointements Pending Or Scheduled.</h3>\n                    </Jumbotron>\n                </Container>\n            )\n        }\n        const listItems = this.props.user.map((i) => \n        <Card style={{ width: '18rem'}}>\n            <Card.Body>\n                <Card.Title>{i.slot}</Card.Title>\n                <Card.Text> {i.aadhaar_id} </Card.Text>\n                {i.status ? <Button variant='warning'>Confirmed</Button>: <Button variant=\"success\" onClick={(e) => this.onClickConfirm(i, e)}>Confirm Appointment </Button>}\n            </Card.Body>\n        </Card>\n            );\n        return(\n            <div>\n                {listItems}\n            </div>\n        )\n    }\n}","/home/shaunak/SE/SE_Project/client/src/services/LoginHospitalOperator.js",["95"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {Redirect, Link,} from 'react-router-dom';\nimport {\n    Form,\n    Button,\n    Jumbotron,\n    Container,\n    Card\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst REDIRECT_PATH_LOGIN = 'hospitaloperator/dashboard'\n\n\n\nclass HospitalOperatorLogin extends Component{\n    constructor(props) {\n        super(props)\n\n        this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            aadhaar_id: '',\n            password: '',\n            redirect_flag: false\n        }\n    }\n\n    onChangeAadhaar(e){\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onChangePassword(e){\n        this.setState({password: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n\n        const userObject = {\n            aadhaar_id : this.state.aadhaar_id,\n            password : this.state.password\n        };\n        sessionStorage.setItem('aadhaar_id_hospital', this.state.aadhaar_id)\n        console.log(userObject)\n\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/operator/hospitallogin`, userObject)\n        .then((res) => {\n            console.log(res.data.token)\n\n            // Save data to sessionStorage\n            sessionStorage.setItem('token', res.data.token);\n\n            // Get saved data from sessionStorage\n            let data = sessionStorage.getItem('token');\n\n            console.log(data)\n\n            this.setState({redirect_flag: true}) \n            \n        \n        }).catch((error) => {\n            console.log(error)\n            toast.error('Invalid creds')\n        });\n\n        this.setState({ aadhaar_id: '', password: '', redirect_flag: false});\n\n    }\n\n   \n    render(){\n        var isRedirect = this.state.redirect_flag;\n        let redirection_html = '';\n        if(isRedirect){\n            redirection_html = <Redirect to={REDIRECT_PATH_LOGIN}/>\n        }\n        else{\n            redirection_html = \"\";\n        }\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Login As Hospital Operator</h2>\n                    <Form onSubmit={this.onSubmit.bind(this)}>\n\n                        <Form.Group>\n                            <Form.Label>Aadhar ID</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Aadhar Number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar.bind(this)} Min=\"100000000000\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control required onChange={this.onChangePassword.bind(this)} value={this.state.password} type=\"password\" placeholder=\"Password\" />\n                        </Form.Group>\n\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                        <ToastContainer/>\n                    </Form>\n                </Jumbotron>\n                {redirection_html}\n            </Container> \n        )\n    }\n}\n\nclass HospitalOperatorDashboard extends Component{\n    constructor(props) {\n        super(props)\n        this.onClickViewData = this.onClickViewData.bind(this)\n        this.onClickUpdateData = this.onClickUpdateData.bind(this)\n        this.state = {\n            operatorInfo: '',\n            showViewData: false,\n            showUpdateData: false,\n        }\n        \n    }\n\n    onClickViewData(e){\n        e.preventDefault();\n        if(!this.state.showViewData)\n            this.setState({showViewData:true})\n        else\n            this.setState({showViewData: false})\n    }\n\n    onClickUpdateData(e){\n        e.preventDefault();\n        if(!this.state.showUpdateData)\n            this.setState({showUpdateData:true})\n        else\n            this.setState({showUpdateData:false})\n    }\n\n    render(){\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Hospital Operator Dashboard</h2><hr></hr>\n                    <Button block onClick={this.onClickViewData} size='lg' variant='secondary'>View Patient Data</Button>{this.state.showViewData ? <ViewData user={this.state.operatorInfo} />: null}\n                    <Button block onClick={this.onClickUpdateData} size='lg' variant='dark'>Update Patient Data</Button>{this.state.showUpdateData ? <UpdateData user={this.state.operatorInfo} />: null}\n                    <Button block href=\"/logout\" size='lg' variant='danger'>Logout</Button>{'  '}\n                </Jumbotron>\n            </Container>\n        )\n    }\n}\n\n\n\nexport{\n    HospitalOperatorLogin,\n    HospitalOperatorDashboard,\n}\n\nclass ViewData extends Component{\n    constructor(props) {\n        super(props)\n        \n        this.onClickViewPatientProfile = this.onClickViewPatientProfile.bind(this)\n        this.onChangeAadhaarId = this.onChangeAadhaarId.bind(this)\n        this.state = {\n            patientData:'',\n            aadhaar_id:'',\n        }\n        \n    }\n\n    onChangeAadhaarId(e){\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onClickViewPatientProfile(e){\n        e.preventDefault()\n        console.log(this.state.aadhaar_id)\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/doctor/viewpatient`, {\n            headers:{\n                'aadhaar_id': this.state.aadhaar_id\n            }\n        })\n        .then(res => {\n            this.setState({ patientData: res.data });\n            console.log(this.state.patientData)\n            this.setState({showData:true})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n\n    }\n    render(){\n        return(\n            <div>\n                <Form.Group>\n                    <Form.Label>Aadhar ID</Form.Label>\n                    <Form.Control required type=\"number\" placeholder=\"Enter Aadhar Number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaarId.bind(this)} Min=\"100000000000\"/>\n                    <Button variant='primary' onClick={this.onClickViewPatientProfile}>View Patient Profile</Button><br></br>{this.state.patientData ? <DisplayPatientData user={this.state.patientData} />: null}\n                </Form.Group>\n            </div>\n        )\n    }\n}\n\nclass UpdateData extends Component{\n    constructor(props) {\n        super(props)\n        this.onChangeAadhaarId = this.onChangeAadhaarId.bind(this)\n        this.onChangeSpo2 = this.onChangeSpo2.bind(this);\n        this.onChangeTemperature = this.onChangeTemperature.bind(this);\n        this.onChangeLastCheckupDate = this.onChangeLastCheckupDate.bind(this);\n        this.onChangePulseRate = this.onChangePulseRate.bind(this);\n        this.onChangeComorbidity = this.onChangeComorbidity.bind(this);\n        this.onClickUpdateData = this.onClickUpdateData.bind(this)\n        this.state = {\n            PatientInfo:[],\n            aadhaar_id:'',\n            spo2: '',\n            temperature: '',\n            last_checkup_date: '',\n            pulse_rate: '',\n            comorbidity:'',\n        }\n        \n        \n    }\n\n    onChangeAadhaarId(e){\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onChangeSpo2(e){\n        this.setState({spo2: e.target.value})\n    }\n    onChangeTemperature(e){\n        this.setState({temperature: e.target.value})\n    }\n    onChangeLastCheckupDate(e){\n        this.setState({last_checkup_date: e.target.value})\n    }\n    onChangePulseRate(e){\n        this.setState({pulse_rate: e.target.value})\n    }\n    onChangeComorbidity(e){\n        this.setState({comorbidity: e.target.value})\n    }\n\n    onClickUpdateData(e){\n        e.preventDefault();\n        const userObject = {\n            aadhaar_id: this.state.aadhaar_id,\n            spo2: this.state.spo2,\n            temperature: this.state.temperature,\n            last_checkup_date: this.state.last_checkup_date,\n            pulse_rate: this.state.pulse_rate,\n            comorbidity:this.state.comorbidity,\n        }\n        console.log(userObject)\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/updateinfo`, userObject)\n        .then((res) => {\n            console.log(res.data.message)\n            toast.success('Updated sucessfully')\n        }).catch((error) => {\n            console.log(error)\n            toast.success('Invalid details')\n        });\n\n        this.setState({\n            aadhaar_id:'',\n            spo2: '',\n            temperature: '',\n            last_checkup_date: '',\n            pulse_rate: '',\n            comorbidity:'',\n        });\n    }\n    \n\n    render(){\n        \n        return(\n            <Container>\n                <Jumbotron>\n                    <Form.Group>\n                        <Form.Label>Aadhaar</Form.Label>\n                        <Form.Control required type=\"number\" placeholder=\"Enter Patient Aadhar\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaarId.bind(this)} Min=\"100000000000\"/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Last Checkup Date</Form.Label>\n                        <Form.Control required type=\"date\" placeholder=\"Enter Last Checkup Date\" value={this.state.last_checkup_date} onChange={this.onChangeLastCheckupDate.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>SPO2</Form.Label>\n                        <Form.Control required type=\"number\" placeholder=\"Enter SPO2\" value={this.state.spo2} onChange={this.onChangeSpo2.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Temperature</Form.Label>\n                        <Form.Control required type=\"number\" placeholder=\"Enter Temperature\" value={this.state.temperature} onChange={this.onChangeTemperature.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Pulse Rate</Form.Label>\n                        <Form.Control required type=\"number\" placeholder=\"Enter Pulse Rate\" value={this.state.pulse_rate} onChange={this.onChangePulseRate.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Comorbidity</Form.Label>\n                        <Form.Control required type=\"text\" placeholder=\"Enter Temperature\" value={this.state.comorbidity} onChange={this.onChangeComorbidity.bind(this)}/>\n                    </Form.Group>\n\n                    <Button variant=\"primary\" onClick={this.onClickUpdateData}>\n                        Update\n                    </Button>\n\n                    <ToastContainer/>\n\n                </Jumbotron>\n            </Container>\n        )\n    }\n}\n\nfunction DisplayPatientData(props) {\n    if(props.user[0]){\n        return (\n            <Card>\n                <Card.Body>\n                    <blockquote className=\"blockquote mb-0\">\n                        <h4>Aadhaar: {props.user[0].aadhaar_id}</h4>\n                        <h4>Name: {props.user[0].name}</h4>\n                        <h4>Age: {props.user[0].age}</h4>\n                        <h4>BMI: {props.user[0].bmi}</h4>\n                        <h4>Last checkup date: {props.user[0].last_checkup_date ? <>{props.user[0].last_checkup_date.substring(0, 10)}</>: null}</h4>\n                        <h4>Spo2: {props.user[0].spo2}</h4>\n                        <h4>Comorbidity: {props.user[0].comorbidity}</h4>\n                    </blockquote>\n                </Card.Body>\n            </Card>\n        );\n    }\n    else{\n        return(\n            <div>\n                <h2>\n                    Patient Record Not Found.\n                </h2>\n            </div>\n        )\n    }\n}\n","/home/shaunak/SE/SE_Project/client/src/services/FAQ.js",["96","97"],"import React, { Component, useEffect, useState } from \"react\";\nimport Faq from \"react-faq-component\";\n\nconst data = {\n    title: \"FAQ\",\n    rows: [\n        {\n            title: \"Who can use PHMS?\",\n            content: `Every person having Aadhaar Id can use the services by registering on the PHMS portal.`,\n        },\n        {\n            title: \"Is my Data safe?\",\n            content:\n                \"We do not share ypur data with anyone for advertising, analysis etc. You data will be accessible to Doctors(for treatment) and Admins(for analysis)\",\n        },\n        {\n            title: \"Can I book online appointments?\",\n            content: `Yes. You can book online appointments here on PHMS portal.`,\n        },\n        {\n            title: \"As a pharmacy or hospital operator, how often should I update my Data?\",\n            content: `It is adviced to update your data as you update your inventory for optimal portal functioning.`,\n        },\n        {\n            title: \"Why does a doctor have access to my Data?\",\n            content: `The doctor needs to know the previous patient history for better treatment. Thus the doctors can chek previous data.`,\n        },\n        {\n            title: \"Can I rely on PHMS?\",\n            content: `Yes, you can definitely rely on PHMS. But in case of emergency and sever illness, visit your doctor immediately.`,\n        },\n        {\n            title: \"Who is responsible for delay in PHMS?\",\n            content: `We understand that delay in medical process is not tolerable. But due to various reasons like internet connectivity, improper filling of data, there may be delay in the process of appointments. The PHMS, however is not responsible for the loss and users are adviced to decide on their own discretion`,\n        },\n        {\n            title: \"Who manages the PHMS?\",\n            content: `PHMS is managed by National Informatics Center, a Government body. The admin can check, analyse and retrieve the data.`,\n        },\n        {\n            title: \"How is my data used at the PHMS?\",\n            content: `Your data is used by the PHMS to analyze the health status of people in the area PHMS is functioning. To put it in simple words, we analyxe the status of health on the basis of bmi, age and number of available beds, etc.`,\n        },\n    ],\n};\n\nconst styles = {\n    // bgColor: 'white',\n    titleTextColor: \"Red\",\n    rowTitleColor: \"DarkBlue\",\n    rowContentColor: 'Charcoal',\n    arrowColor: \"red\",\n};\n\nconst config = {\n    animate: true,\n    // arrowIcon: \"V\",\n    tabFocus: true\n};\n\n\nexport default class FaqPage extends Component{\n    render() {\n        const divStyle = {\n            margin: '20px auto',\n            padding: '0px 20px',\n        };\n        return (\n            <div style={divStyle}>\n            <Faq\n                data={data}\n                styles={styles}\n                config={config}\n            />\n            </div>\n        )\n    }\n}","/home/shaunak/SE/SE_Project/client/src/services/Analysis.js",["98","99","100","101"],"import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass AgePie extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            options: {\n                labels: ['0-18', '19-58', '59+'],\n                title: {\n                    text: \"Age Division\",\n                    align: 'left',\n                    margin: 10,\n                    offsetX: 0,\n                    offsetY: 0,\n                    floating: false,\n                    style: {\n                      fontSize:  '25px',\n                      fontWeight:  'bold',\n                      fontFamily:  undefined,\n                      color:  '#263238'\n                    },\n                },\n            },\n            series: [0, 0, 0],\n            labels: ['0-18', '19-58', '59+'],\n            citizenInfo: [{}, {}]\n        }\n    }\n\n    componentDidMount(){\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/viewstats`, {\n        })\n        .then(res => {\n            this.setState({ citizenInfo: res.data });\n            console.log(this.state.citizenInfo)\n            this.counter();\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    counter(){\n        var a = 0;\n        var b = 0;\n        var c = 0;\n        var x = {};\n\n        for(x in this.state.citizenInfo){\n            if (this.state.citizenInfo[x].age){\n                if(this.state.citizenInfo[x].age <= 18){\n                    a++;\n                }\n                else if(this.state.citizenInfo[x].age >= 19 && this.state.citizenInfo[x].age <= 58){\n                    b++;  \n                }\n                else if(this.state.citizenInfo[x].age >= 59){\n                    c++;\n                }\n            }\n        }\n\n        this.setState({series: [a, b, c]});\n    }\n\n    render() {\n        const divStyle = {\n            display: 'block',\n            width: 'max-content',\n            margin: '20px auto',\n        };\n        return (\n        <div style={divStyle}>\n            <Chart options={this.state.options} series={this.state.series} type=\"donut\" width=\"500\" />\n        </div>\n        );\n    }\n}\n\n\nclass BmiPie extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            options: {\n                labels: ['Underweight (Below 18.5)', 'Healthy Weight (18.5 to 14.9)', 'Overweight(25.0 to 29.9)', 'Obese (30.0 and above)'],\n                title: {\n                    text: \"BMI Analysis\",\n                    align: 'left',\n                    margin: 10,\n                    offsetX: 0,\n                    offsetY: 0,\n                    floating: false,\n                    style: {\n                      fontSize:  '25px',\n                      fontWeight:  'bold',\n                      fontFamily:  undefined,\n                      color:  '#263238'\n                    },\n                },\n            },\n            series: [0, 0, 0, 0],\n            labels: ['Underweight (Below 18.5)', 'Healthy Weight (18.5 to 14.9)', 'Overweight(25.0 to 29.9)', 'Obese (30.0 and above)'],\n            citizenInfo: [{}, {}]\n        }\n    }\n\n    componentDidMount(){\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/viewstats`, {\n        })\n        .then(res => {\n            this.setState({ citizenInfo: res.data });\n            console.log(this.state.citizenInfo)\n            this.counter();\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    counter(){\n        var a = 0;\n        var b = 0;\n        var c = 0;\n        var d = 0;\n        var x = {};\n\n        for(x in this.state.citizenInfo){\n            if (this.state.citizenInfo[x].bmi){\n                if(this.state.citizenInfo[x].bmi < 18.5){\n                    a++;\n                }\n                else if(this.state.citizenInfo[x].bmi >= 18.5 && this.state.citizenInfo[x].bmi < 25){\n                    b++;  \n                }\n                else if(this.state.citizenInfo[x].bmi >= 25.0 && this.state.citizenInfo[x].bmi < 30){\n                    c++;\n                }\n                else if(this.state.citizenInfo[x].bmi >= 30){\n                    d++;\n                }\n            }\n        }\n\n        this.setState({series: [a, b, c, d]});\n    }\n\n    render() {\n        const divStyle = {\n            display: 'block',\n            width: 'max-content',\n            margin: '20px auto',\n        };\n        return (\n        <div style={divStyle}>\n            <Chart options={this.state.options} series={this.state.series} type=\"donut\" width=\"600\" />\n        </div>\n        );\n    }\n}\n\n\nclass BedsBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options: {\n                chart: {\n                    id: \"basic-bar\"\n                },\n                xaxis: {\n                    categories: []\n                    // hosp names here\n                },\n                title: {\n                    text: \"Number of Beds available\",\n                    align: 'left',\n                    margin: 10,\n                    offsetX: 10,\n                    offsetY: 0,\n                    floating: false,\n                    style: {\n                      fontSize:  '25px',\n                      fontWeight:  'bold',\n                      fontFamily:  undefined,\n                      color:  '#263238'\n                    },\n                },\n            },\n            series: [\n                {\n                    name: \"series-1\",\n                    data: [],\n                    // number of beds here\n                }\n            ],\n            hospInfo: [{}, {}]\n        };\n    }\n\n    componentDidMount(){\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/hospital/viewstats`, {\n        })\n        .then(res => {\n            this.setState({ hospInfo: res.data });\n            console.log(this.state.hospInfo);\n            this.counter();\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    counter(){\n        var x = {};\n        var names = [];\n        var beds = [];\n\n        for(x in this.state.hospInfo){\n            if (this.state.hospInfo[x].name){\n                names[x] = this.state.hospInfo[x].name;\n                beds[x] = this.state.hospInfo[x].no_of_beds;\n            }\n        }\n\n        this.setState({options: {xaxis: {categories: names}}, series: [{name: \"No. of Beds\", data: beds}]});\n    }\n\n    render() {\n        const divStyle = {\n            display: 'block',\n            width: 'max-content',\n            margin: '20px auto',\n        };\n        return (\n            <div style={divStyle}>\n\n            \n            <div className=\"app\">\n            <div className=\"row\">\n                <div className=\"mixed-chart\">\n                <Chart\n                    options={this.state.options}\n                    series={this.state.series}\n                    type=\"bar\"\n                    width=\"500\"\n                />\n                </div>\n            </div>\n            </div>\n            </div>\n        );\n    }\n}\n\n\nclass CheckupPie extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            options: {\n                labels: ['Last 1 Month', 'Last 2 to 3 Months', 'Beyond 3 months'],\n                title: {\n                    text: \"Last Health Check-up\",\n                    align: 'left',\n                    margin: 10,\n                    offsetX: 0,\n                    offsetY: 0,\n                    floating: false,\n                    style: {\n                      fontSize:  '25px',\n                      fontWeight:  'bold',\n                      fontFamily:  undefined,\n                      color:  '#263238'\n                    },\n                },\n            },\n            series: [0, 0, 0],\n            labels: ['Last 1 Month', 'Last 2 to 3 Months', 'Beyond 3 months'],\n            citizenInfo: [{}, {}]\n        }\n    }\n\n    componentDidMount(){\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/viewstats`, {\n        })\n        .then(res => {\n            this.setState({ citizenInfo: res.data });\n            console.log(this.state.citizenInfo)\n            this.counter();\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n    diff_months(dt2, dt1) {\n        var diff =(dt2.getTime() - dt1.getTime()) / 1000;\n        diff /= (60 * 60 * 24 * 7 * 4);\n        return Math.abs(Math.round(diff));\n    }\n\n    counter(){\n        var a = 0;\n        var b = 0;\n        var c = 0;\n        var x = {};\n        var d = new Date();\n\n        for(x in this.state.citizenInfo){\n            if (this.state.citizenInfo[x].last_checkup_date){\n\n                var temp = new Date(this.state.citizenInfo[x].last_checkup_date);\n                var diff = this.diff_months(d, temp);\n                if(diff == 0 || diff == 1)\n                    a++;\n                else if(diff == 2 || diff == 3)\n                    b++;\n                else if(diff > 3)\n                    c++;\n            }\n        }\n\n        this.setState({series: [a, b, c]});\n    }\n\n    render() {\n        const divStyle = {\n            display: 'block',\n            width: 'max-content',\n            margin: '20px auto',\n        };\n        return (\n        <div style={divStyle}>\n            <Chart options={this.state.options} series={this.state.series} type=\"donut\" width=\"600\" />\n        </div>\n        );\n    }\n}\n\n\n\nexport {\n    AgePie,\n    BmiPie,\n    BedsBar,\n    CheckupPie,\n};",{"ruleId":"102","severity":1,"message":"103","line":4,"column":16,"nodeType":"104","messageId":"105","endLine":4,"endColumn":29},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":60,"column":37,"nodeType":"112","messageId":"113","endLine":60,"endColumn":39},{"ruleId":"102","severity":1,"message":"114","line":6,"column":5,"nodeType":"104","messageId":"105","endLine":6,"endColumn":16},{"ruleId":"102","severity":1,"message":"115","line":7,"column":5,"nodeType":"104","messageId":"105","endLine":7,"endColumn":18},{"ruleId":"102","severity":1,"message":"116","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":21},{"ruleId":"102","severity":1,"message":"117","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":16},{"ruleId":"102","severity":1,"message":"118","line":4,"column":33,"nodeType":"104","messageId":"105","endLine":4,"endColumn":39},{"ruleId":"119","severity":1,"message":"120","line":28,"column":70,"nodeType":"112","messageId":"121","endLine":28,"endColumn":71},{"ruleId":"122","severity":1,"message":"123","line":37,"column":21,"nodeType":"124","endLine":37,"endColumn":38},{"ruleId":"102","severity":1,"message":"125","line":6,"column":19,"nodeType":"104","messageId":"105","endLine":6,"endColumn":23},{"ruleId":"102","severity":1,"message":"125","line":3,"column":19,"nodeType":"104","messageId":"105","endLine":3,"endColumn":23},{"ruleId":"102","severity":1,"message":"126","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":22},{"ruleId":"102","severity":1,"message":"127","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":17},{"ruleId":"102","severity":1,"message":"125","line":5,"column":19,"nodeType":"104","messageId":"105","endLine":5,"endColumn":23},{"ruleId":"102","severity":1,"message":"128","line":1,"column":28,"nodeType":"104","messageId":"105","endLine":1,"endColumn":37},{"ruleId":"102","severity":1,"message":"129","line":1,"column":39,"nodeType":"104","messageId":"105","endLine":1,"endColumn":47},{"ruleId":"110","severity":1,"message":"111","line":322,"column":25,"nodeType":"112","messageId":"113","endLine":322,"endColumn":27},{"ruleId":"110","severity":1,"message":"111","line":322,"column":38,"nodeType":"112","messageId":"113","endLine":322,"endColumn":40},{"ruleId":"110","severity":1,"message":"111","line":324,"column":30,"nodeType":"112","messageId":"113","endLine":324,"endColumn":32},{"ruleId":"110","severity":1,"message":"111","line":324,"column":43,"nodeType":"112","messageId":"113","endLine":324,"endColumn":45},"no-unused-vars","'AppWithRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["130"],"no-negated-in-lhs",["131"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ButtonGroup' is defined but never used.","'ButtonToolbar' is defined but never used.","'DayTimePicker' is defined but never used.","'ReactDOM' is defined but never used.","'Button' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Link' is defined but never used.","'selectFields' is defined but never used.","'compare' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]