[{"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/index.js":"1","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/reportWebVitals.js":"2","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/App1.js":"3","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/Login.js":"4","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginDoctor.js":"5","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginHospitalOperator.js":"6","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/CitizenProfile.js":"7","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterPharmacy.js":"8","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterHospital.js":"9","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterDoctor.js":"10","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginPharmacyOperator.js":"11","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/CreateCitizenProfile.js":"12","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterOperator.js":"13","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/signUp.js":"14","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/Chatbot.js":"15"},{"size":521,"mtime":1618728682672,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1618463097475,"results":"18","hashOfConfig":"17"},{"size":4900,"mtime":1618800981947,"results":"19","hashOfConfig":"17"},{"size":3758,"mtime":1618754237960,"results":"20","hashOfConfig":"17"},{"size":8793,"mtime":1618809295462,"results":"21","hashOfConfig":"17"},{"size":11204,"mtime":1618810091950,"results":"22","hashOfConfig":"17"},{"size":1830,"mtime":1618801147774,"results":"23","hashOfConfig":"17"},{"size":4724,"mtime":1618809796866,"results":"24","hashOfConfig":"17"},{"size":5946,"mtime":1618754237960,"results":"25","hashOfConfig":"17"},{"size":4629,"mtime":1618754237960,"results":"26","hashOfConfig":"17"},{"size":14406,"mtime":1618812889570,"results":"27","hashOfConfig":"17"},{"size":15180,"mtime":1618800900070,"results":"28","hashOfConfig":"17"},{"size":4381,"mtime":1618754237960,"results":"29","hashOfConfig":"17"},{"size":3475,"mtime":1618765046266,"results":"30","hashOfConfig":"17"},{"size":1811,"mtime":1618813300557,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1ip7eu4",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/index.js",["66"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App1, { AppWithRouter } from './App1';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App1/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["67","68"],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/reportWebVitals.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/App1.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/Login.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginDoctor.js",["69","70","71"],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginHospitalOperator.js",["72"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Redirect, Link,} from 'react-router-dom';\nimport {\n    Form,\n    Button,\n    Jumbotron,\n    Container,\n    Card\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst REDIRECT_PATH_LOGIN = 'hospitaloperator/dashboard'\n\nclass HospitalOperatorLogin extends Component{\n    constructor(props) {\n        super(props)\n\n        this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            aadhaar_id: '',\n            password: '',\n            redirect_flag: false\n        }\n    }\n\n    onChangeAadhaar(e){\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onChangePassword(e){\n        this.setState({password: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n\n        const userObject = {\n            aadhaar_id : this.state.aadhaar_id,\n            password : this.state.password\n        };\n        sessionStorage.setItem('aadhaar_id_hospital', this.state.aadhaar_id)\n        console.log(userObject)\n\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/operator/hospitallogin`, userObject)\n        .then((res) => {\n            console.log(res.data.token)\n\n            // Save data to sessionStorage\n            sessionStorage.setItem('token', res.data.token);\n\n            // Get saved data from sessionStorage\n            let data = sessionStorage.getItem('token');\n\n            console.log(data)\n\n            this.setState({redirect_flag: true}) \n            \n        \n        }).catch((error) => {\n            console.log(error)\n        });\n\n        this.setState({ aadhaar_id: '', password: '', redirect_flag: false});\n\n    }\n\n   \n    render(){\n        var isRedirect = this.state.redirect_flag;\n        let redirection_html = '';\n        if(isRedirect){\n            redirection_html = <Redirect to={REDIRECT_PATH_LOGIN}/>\n        }\n        else{\n            redirection_html = \"\";\n        }\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Login As Hospital Operator</h2>\n                    <Form onSubmit={this.onSubmit.bind(this)}>\n\n                        <Form.Group>\n                            <Form.Label>Aadhar ID</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Aadhar Number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar.bind(this)} Min=\"100000000000\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control required onChange={this.onChangePassword.bind(this)} value={this.state.password} type=\"password\" placeholder=\"Password\" />\n                        </Form.Group>\n\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                </Jumbotron>\n                {redirection_html}\n            </Container> \n        )\n    }\n}\n\nclass HospitalOperatorDashboard extends Component{\n    constructor(props) {\n        super(props)\n        this.onClickViewData = this.onClickViewData.bind(this)\n        this.onClickUpdateData = this.onClickUpdateData.bind(this)\n        this.state = {\n            operatorInfo: '',\n            showViewData: false,\n            showUpdateData: false,\n        }\n        \n    }\n\n    onClickViewData(e){\n        e.preventDefault();\n        if(!this.state.showViewData)\n            this.setState({showViewData:true})\n        else\n            this.setState({showViewData: false})\n    }\n\n    onClickUpdateData(e){\n        e.preventDefault();\n        if(!this.state.showUpdateData)\n            this.setState({showUpdateData:true})\n        else\n            this.setState({showUpdateData:false})\n    }\n\n    render(){\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Hospital Operator Dashboard</h2><hr></hr>\n                    <Button block onClick={this.onClickViewData} size='lg' variant='secondary'>View Patient Data</Button>{this.state.showViewData ? <ViewData user={this.state.operatorInfo} />: null}\n                    <Button block onClick={this.onClickUpdateData} size='lg' variant='dark'>Update Patient Data</Button>{this.state.showUpdateData ? <UpdateData user={this.state.operatorInfo} />: null}\n                </Jumbotron>\n            </Container>\n        )\n    }\n}\n\n\n\nexport{\n    HospitalOperatorLogin,\n    HospitalOperatorDashboard,\n}\n\nclass ViewData extends Component{\n    constructor(props) {\n        super(props)\n        \n        this.onClickViewPatientProfile = this.onClickViewPatientProfile.bind(this)\n        this.onChangeAadhaarId = this.onChangeAadhaarId.bind(this)\n        this.state = {\n            patientData:'',\n            aadhaar_id:'',\n        }\n        \n    }\n\n    onChangeAadhaarId(e){\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onClickViewPatientProfile(e){\n        e.preventDefault()\n        console.log(this.state.aadhaar_id)\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/doctor/viewpatient`, {\n            headers:{\n                'aadhaar_id': this.state.aadhaar_id\n            }\n        })\n        .then(res => {\n            this.setState({ patientData: res.data });\n            console.log(this.state.patientData)\n            this.setState({showData:true})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n\n    }\n    render(){\n        return(\n            <div>\n                <Form.Group>\n                    <Form.Label>Aadhar ID</Form.Label>\n                    <Form.Control required type=\"number\" placeholder=\"Enter Aadhar Number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaarId.bind(this)} Min=\"100000000000\"/>\n                    <Button variant='primary' onClick={this.onClickViewPatientProfile}>View Patient Profile</Button><br></br>{this.state.patientData ? <DisplayPatientData user={this.state.patientData} />: null}\n                </Form.Group>\n            </div>\n        )\n    }\n}\n\nclass UpdateData extends Component{\n    constructor(props) {\n        super(props)\n        this.onChangeAadhaarId = this.onChangeAadhaarId.bind(this)\n        this.onChangeSpo2 = this.onChangeSpo2.bind(this);\n        this.onChangeTemperature = this.onChangeTemperature.bind(this);\n        this.onChangeLastCheckupDate = this.onChangeLastCheckupDate.bind(this);\n        this.onChangePulseRate = this.onChangePulseRate.bind(this);\n        this.onChangeComorbidity = this.onChangeComorbidity.bind(this);\n        this.onClickUpdateData = this.onClickUpdateData.bind(this)\n        this.state = {\n            PatientInfo:[],\n            aadhaar_id:'',\n            spo2: '',\n            temperature: '',\n            last_checkup_date: '',\n            pulse_rate: '',\n            comorbidity:'',\n        }\n        \n        \n    }\n\n    onChangeAadhaarId(e){\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onChangeSpo2(e){\n        this.setState({spo2: e.target.value})\n    }\n    onChangeTemperature(e){\n        this.setState({temperature: e.target.value})\n    }\n    onChangeLastCheckupDate(e){\n        this.setState({last_checkup_date: e.target.value})\n    }\n    onChangePulseRate(e){\n        this.setState({pulse_rate: e.target.value})\n    }\n    onChangeComorbidity(e){\n        this.setState({comorbidity: e.target.value})\n    }\n\n    onClickUpdateData(e){\n        e.preventDefault();\n        const userObject = {\n            aadhaar_id: this.state.aadhaar_id,\n            spo2: this.state.spo2,\n            temperature: this.state.temperature,\n            last_checkup_date: this.state.last_checkup_date,\n            pulse_rate: this.state.pulse_rate,\n            comorbidity:this.state.comorbidity,\n        }\n        console.log(userObject)\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/updateinfo`, userObject)\n        .then((res) => {\n            console.log(res.data.message)\n\n        }).catch((error) => {\n            console.log(error)\n        });\n\n        this.setState({\n            aadhaar_id:'',\n            spo2: '',\n            temperature: '',\n            last_checkup_date: '',\n            pulse_rate: '',\n            comorbidity:'',\n        });\n    }\n    \n\n    render(){\n        \n        return(\n            <Container>\n                <Jumbotron>\n                    <Form.Group>\n                        <Form.Label>Aadhaar</Form.Label>\n                        <Form.Control required type=\"number\" placeholder=\"Enter Patient Aadhar\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaarId.bind(this)} Min=\"100000000000\"/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Last Checkup Date</Form.Label>\n                        <Form.Control required type=\"date\" placeholder=\"Enter Last Checkup Date\" value={this.state.last_checkup_date} onChange={this.onChangeLastCheckupDate.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>SPO2</Form.Label>\n                        <Form.Control required type=\"number\" placeholder=\"Enter SPO2\" value={this.state.spo2} onChange={this.onChangeSpo2.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Temperature</Form.Label>\n                        <Form.Control required type=\"number\" placeholder=\"Enter Temperature\" value={this.state.temperature} onChange={this.onChangeTemperature.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Pulse Rate</Form.Label>\n                        <Form.Control required type=\"number\" placeholder=\"Enter Pulse Rate\" value={this.state.pulse_rate} onChange={this.onChangePulseRate.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Comorbidity</Form.Label>\n                        <Form.Control required type=\"text\" placeholder=\"Enter Temperature\" value={this.state.comorbidity} onChange={this.onChangeComorbidity.bind(this)}/>\n                    </Form.Group>\n\n                    <Button variant=\"primary\" onClick={this.onClickUpdateData}>\n                        Update\n                    </Button>\n\n\n                </Jumbotron>\n            </Container>\n        )\n    }\n}\n\nfunction DisplayPatientData(props) {\n    if(props.user[0]){\n        return (\n            <Card>\n                <Card.Body>\n                    <blockquote className=\"blockquote mb-0\">\n                        <h4>Aadhaar: {props.user[0].aadhaar_id}</h4>\n                        <h4>Name: {props.user[0].name}</h4>\n                    </blockquote>\n                </Card.Body>\n            </Card>\n        );\n    }\n    else{\n        return(\n            <div>\n                <h2>\n                    Patient record not found.\n                </h2>\n            </div>\n        )\n    }\n}\n","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/CitizenProfile.js",["73","74"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport {\n    Container,\n    Button,\n    ButtonGroup,\n    ButtonToolbar\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class CitizenProfile extends Component{\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            usersCollection: []\n        }\n    }\n\n    componentDidMount() {\n        let data = sessionStorage.getItem('token');\n        console.log(data, typeof(data))\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/me`, {\n            headers:{\n                'token': data\n            }\n        })\n            .then(res => {\n                this.setState({ usersCollection: res.data });\n                //console.log(this.state.usersCollection)\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    render(){\n        return(\n            <Container>\n                <h2>\n                    Welcome User With aadhaar {this.state.usersCollection.aadhaar_id}\n                </h2>\n                <hr></hr>\n                <Container>\n                    <Button block href=\"/citizen/createprofile\" size='lg' variant='primary'>Create Profile</Button>{'  '}\n                    <Button block href=\"/citizen/viewprofile\" size='lg' variant='secondary'>View Profile</Button>{'  '}\n                    <Button block href=\"/citizen/bookappointment\" size='lg' variant='success'>Book Appointment</Button>{'  '}\n                    <Button block href=\"/citizen/checkappointment\" size='lg' variant='info'>Check Appointments</Button>{'  '}\n                    <Button block href=\"/logout\" size='lg' variant='danger'>Logout</Button>{'  '}\n                </Container>\n            </Container> \n        )\n    }\n}","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterPharmacy.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterHospital.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterDoctor.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginPharmacyOperator.js",["75"],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/CreateCitizenProfile.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterOperator.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/signUp.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/Chatbot.js",["76","77","78","79"],{"ruleId":"80","severity":1,"message":"81","line":4,"column":16,"nodeType":"82","messageId":"83","endLine":4,"endColumn":29},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"80","severity":1,"message":"88","line":3,"column":19,"nodeType":"82","messageId":"83","endLine":3,"endColumn":23},{"ruleId":"80","severity":1,"message":"89","line":4,"column":10,"nodeType":"82","messageId":"83","endLine":4,"endColumn":22},{"ruleId":"80","severity":1,"message":"90","line":5,"column":10,"nodeType":"82","messageId":"83","endLine":5,"endColumn":17},{"ruleId":"80","severity":1,"message":"88","line":3,"column":19,"nodeType":"82","messageId":"83","endLine":3,"endColumn":23},{"ruleId":"80","severity":1,"message":"91","line":6,"column":5,"nodeType":"82","messageId":"83","endLine":6,"endColumn":16},{"ruleId":"80","severity":1,"message":"92","line":7,"column":5,"nodeType":"82","messageId":"83","endLine":7,"endColumn":18},{"ruleId":"80","severity":1,"message":"88","line":3,"column":19,"nodeType":"82","messageId":"83","endLine":3,"endColumn":23},{"ruleId":"80","severity":1,"message":"93","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"80","severity":1,"message":"94","line":4,"column":33,"nodeType":"82","messageId":"83","endLine":4,"endColumn":39},{"ruleId":"95","severity":1,"message":"96","line":28,"column":70,"nodeType":"97","messageId":"98","endLine":28,"endColumn":71},{"ruleId":"99","severity":1,"message":"100","line":37,"column":21,"nodeType":"101","endLine":37,"endColumn":38},"no-unused-vars","'AppWithRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["102"],"no-negated-in-lhs",["103"],"'Link' is defined but never used.","'selectFields' is defined but never used.","'compare' is defined but never used.","'ButtonGroup' is defined but never used.","'ButtonToolbar' is defined but never used.","'ReactDOM' is defined but never used.","'Button' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
