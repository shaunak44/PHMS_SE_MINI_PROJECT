[{"/home/shaunak/SE/SE_Project/client/src/index.js":"1","/home/shaunak/SE/SE_Project/client/src/App1.js":"2","/home/shaunak/SE/SE_Project/client/src/reportWebVitals.js":"3","/home/shaunak/SE/SE_Project/client/src/services/Login.js":"4","/home/shaunak/SE/SE_Project/client/src/services/signUp.js":"5","/home/shaunak/SE/SE_Project/client/src/services/CitizenProfile.js":"6","/home/shaunak/SE/SE_Project/client/src/services/RegisterHospital.js":"7","/home/shaunak/SE/SE_Project/client/src/services/RegisterOperator.js":"8","/home/shaunak/SE/SE_Project/client/src/services/RegisterDoctor.js":"9","/home/shaunak/SE/SE_Project/client/src/services/CreateCitizenProfile.js":"10","/home/shaunak/SE/SE_Project/client/src/services/Chatbot.js":"11","/home/shaunak/SE/SE_Project/client/src/services/RegisterPharmacy.js":"12","/home/shaunak/SE/SE_Project/client/src/services/LoginPharmacyOperator.js":"13","/home/shaunak/SE/SE_Project/client/src/services/LoginDoctor.js":"14","/home/shaunak/SE/SE_Project/client/src/services/LoginHospitalOperator.js":"15","/home/shaunak/SE/SE_Project/client/src/services/FAQ.js":"16","/home/shaunak/SE/SE_Project/client/src/services/Analysis.js":"17"},{"size":521,"mtime":1618723692589,"results":"18","hashOfConfig":"19"},{"size":6313,"mtime":1618913350665,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1612081859868,"results":"21","hashOfConfig":"19"},{"size":3963,"mtime":1618912976312,"results":"22","hashOfConfig":"19"},{"size":4428,"mtime":1619345300338,"results":"23","hashOfConfig":"19"},{"size":1830,"mtime":1618912976312,"results":"24","hashOfConfig":"19"},{"size":4925,"mtime":1618912976312,"results":"25","hashOfConfig":"19"},{"size":3626,"mtime":1618912976312,"results":"26","hashOfConfig":"19"},{"size":3915,"mtime":1618912976312,"results":"27","hashOfConfig":"19"},{"size":16597,"mtime":1618912976312,"results":"28","hashOfConfig":"19"},{"size":1811,"mtime":1618912976308,"results":"29","hashOfConfig":"19"},{"size":4987,"mtime":1618912976312,"results":"30","hashOfConfig":"19"},{"size":15011,"mtime":1618912976312,"results":"31","hashOfConfig":"19"},{"size":10223,"mtime":1619331951286,"results":"32","hashOfConfig":"19"},{"size":12022,"mtime":1618912976312,"results":"33","hashOfConfig":"19"},{"size":2952,"mtime":1619345579302,"results":"34","hashOfConfig":"19"},{"size":9717,"mtime":1619345541030,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1hvvxb4",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/shaunak/SE/SE_Project/client/src/index.js",["77"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App1, { AppWithRouter } from './App1';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App1/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["78","79"],"/home/shaunak/SE/SE_Project/client/src/App1.js",[],"/home/shaunak/SE/SE_Project/client/src/reportWebVitals.js",[],"/home/shaunak/SE/SE_Project/client/src/services/Login.js",[],"/home/shaunak/SE/SE_Project/client/src/services/signUp.js",["80"],"/home/shaunak/SE/SE_Project/client/src/services/CitizenProfile.js",["81","82"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport {\n    Container,\n    Button,\n    ButtonGroup,\n    ButtonToolbar\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class CitizenProfile extends Component{\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            usersCollection: []\n        }\n    }\n\n    componentDidMount() {\n        let data = sessionStorage.getItem('token');\n        console.log(data, typeof(data))\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/me`, {\n            headers:{\n                'token': data\n            }\n        })\n            .then(res => {\n                this.setState({ usersCollection: res.data });\n                //console.log(this.state.usersCollection)\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    render(){\n        return(\n            <Container>\n                <h2>\n                    Welcome User With aadhaar {this.state.usersCollection.aadhaar_id}\n                </h2>\n                <hr></hr>\n                <Container>\n                    <Button block href=\"/citizen/createprofile\" size='lg' variant='primary'>Create Profile</Button>{'  '}\n                    <Button block href=\"/citizen/viewprofile\" size='lg' variant='secondary'>View Profile</Button>{'  '}\n                    <Button block href=\"/citizen/bookappointment\" size='lg' variant='success'>Book Appointment</Button>{'  '}\n                    <Button block href=\"/citizen/checkappointment\" size='lg' variant='info'>Check Appointments</Button>{'  '}\n                    <Button block href=\"/logout\" size='lg' variant='danger'>Logout</Button>{'  '}\n                </Container>\n            </Container> \n        )\n    }\n}","/home/shaunak/SE/SE_Project/client/src/services/RegisterHospital.js",[],"/home/shaunak/SE/SE_Project/client/src/services/RegisterOperator.js",[],"/home/shaunak/SE/SE_Project/client/src/services/RegisterDoctor.js",[],"/home/shaunak/SE/SE_Project/client/src/services/CreateCitizenProfile.js",[],"/home/shaunak/SE/SE_Project/client/src/services/Chatbot.js",["83","84","85","86"],"import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    Container, Jumbotron, Form, Button\n} from 'react-bootstrap'\n\nexport default class Chatbot extends Component{\n    talk(event){\n        var know = {\n            \"hello\": \"Hello I Am A Simple Chatbot. I Am Here To Help You!\",\n            \"hi\": \"Hii, Tell me something about yourself ??\",\n            \"how are you?\": \"I am great !!\",\n            \"life is like hell\": \"Are you in TY COMP at COEP ?\",\n            \"tell me a random fact\": \"Life would have been much easy, if there was no Abhijit Sir.\",\n            \"bye\": \"Bye ! Have A Great Day !!\"\n        }\n        console.log(event);\n        if(event.keyCode === 13){\n            \n            var user = document.getElementById(\"userbox\").value\n            document.getElementById(\"userbox\").value = \"\"\n            document.getElementById(\"chatLog\").innerHTML += user + \"<br>\"\n            \n            if(user in know){\n                document.getElementById(\"chatLog\").innerHTML += \"> \" + know[user] + \"<br><br>\"\n            }\n            else{\n                document.getElementById(\"chatLog\").innerHTML += \"> \" + \"Sorry I Can't Understand. <br><br>\"\n            }\n        }\n    }\n    render() {\n        return (\n            <Container>\n                <Jumbotron>\n                    <h2>CHATBOT</h2><hr></hr>\n                    <h4 id=\"chatLog\"></h4>\n                    <Form.Group>\n                        <Form.Control id=\"userbox\" type=\"text\" onKeyDown={this.talk} placeholder=\"Ask Your Queries\" />\n                    </Form.Group>\n                    {/* <input id=\"userbox\" type=\"text\" onKeyDown={this.talk}></input> */}\n                    <h3>Hello I am CHABOT, Ask me your queries !</h3>\n                </Jumbotron>\n            </Container>\n        )\n    }\n}\n","/home/shaunak/SE/SE_Project/client/src/services/RegisterPharmacy.js",[],"/home/shaunak/SE/SE_Project/client/src/services/LoginPharmacyOperator.js",["87"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {Redirect, Link,} from 'react-router-dom';\nimport {\n    Form,\n    Button,\n    Jumbotron,\n    Container,\n    Card,\n    CardDeck\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst REDIRECT_PATH_LOGIN = 'pharmacyoperator/dashboard'\n\n\n\nclass PharmacyOperatorLogin extends Component{\n    constructor(props) {\n        super(props)\n\n        this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            aadhaar_id: '',\n            password: '',\n            redirect_flag: false\n        }\n    }\n\n    onChangeAadhaar(e){\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onChangePassword(e){\n        this.setState({password: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n\n        const userObject = {\n            aadhaar_id : this.state.aadhaar_id,\n            password : this.state.password\n        };\n        sessionStorage.setItem('aadhaar_id_pharmacy', this.state.aadhaar_id)\n        console.log(userObject)\n\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/operator/pharmacylogin`, userObject)\n        .then((res) => {\n            console.log(res.data.token)\n\n            // Save data to sessionStorage\n            sessionStorage.setItem('token', res.data.token);\n\n            // Get saved data from sessionStorage\n            let data = sessionStorage.getItem('token');\n\n            console.log(data)\n\n            this.setState({redirect_flag: true}) \n            \n        \n        }).catch((error) => {\n            console.log(error)\n            toast.error('Invalid credentials')\n        });\n\n        this.setState({ aadhaar_id: '', password: '', redirect_flag: false});\n\n    }\n\n   \n    render(){\n        var isRedirect = this.state.redirect_flag;\n        let redirection_html = '';\n        if(isRedirect){\n            redirection_html = <Redirect to={REDIRECT_PATH_LOGIN}/>\n        }\n        else{\n            redirection_html = \"\";\n        }\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Login As Pharmacy Operator</h2>\n                    <Form onSubmit={this.onSubmit.bind(this)}>\n\n                        <Form.Group>\n                            <Form.Label>Aadhar ID</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Aadhar Number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar.bind(this)} Min=\"100000000000\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control required onChange={this.onChangePassword.bind(this)} value={this.state.password} type=\"password\" placeholder=\"Password\" />\n                        </Form.Group>\n\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                        <ToastContainer/>\n                    </Form>\n                </Jumbotron>\n                {redirection_html}\n            </Container> \n        )\n    }\n}\n\nclass PharmacyOperatorDashboard extends Component{\n    constructor(props) {\n        super(props)\n        this.onClickAddStocks = this.onClickAddStocks.bind(this)\n        this.onClickShowStocks = this.onClickShowStocks.bind(this)\n        this.onClickUpdateStocks = this.onClickUpdateStocks.bind(this)\n        this.state = {\n            operatorInfo: '',\n            showAddStock: false,\n            showShowStock: false,\n            showUpdateStock: false,\n        }\n        \n    }\n\n    onClickAddStocks(e){\n        e.preventDefault();\n        if(!this.state.showAddStock)\n            this.setState({showAddStock:true})\n        else\n            this.setState({showAddStock: false})\n    }\n\n    onClickShowStocks(e){\n        e.preventDefault();\n        if(!this.state.showShowStock)\n            this.setState({showShowStock:true})\n        else\n            this.setState({showShowStock:false})\n    }\n    onClickUpdateStocks(e){\n        e.preventDefault();\n        if(!this.state.showUpdateStock)\n            this.setState({showUpdateStock:true})\n        else\n            this.setState({showUpdateStock:false})\n    }\n\n    componentDidMount(){\n        let aadhaar_id = sessionStorage.getItem('aadhaar_id_pharmacy')\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/operator/pharmacyme`, {\n            headers:{\n                'aadhaar_id': aadhaar_id\n            }\n        })\n        .then(res => {\n            this.setState({ operatorInfo: res.data });\n            console.log(this.state.operatorInfo)\n            sessionStorage.setItem('store_id', this.state.operatorInfo[0].store_id)\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    render(){\n        return(\n            <Container>\n                <Jumbotron>\n                    <h3>Pharmacy Operator Dashboard</h3><hr></hr>\n                    <Button block onClick={this.onClickAddStocks} size='lg' variant='primary'>Add Stocks</Button>{this.state.showAddStock ? <AddStock user={this.state.operatorInfo} />: null}\n                    <Button block onClick={this.onClickShowStocks} size='lg' variant='warning'>Show Stocks</Button>{this.state.showShowStock ? <ShowStock user={this.state.operatorInfo} />: null}\n                    <Button block onClick={this.onClickUpdateStocks} size='lg' variant='success'>Update Or Delete Stocks</Button>{this.state.showUpdateStock ? <UpdateStock user={this.state.operatorInfo} />: null}\n                    <Button block href=\"/logout\" size='lg' variant='danger'>Logout</Button>{'  '}\n                </Jumbotron>\n            </Container>\n        )\n    }\n}\n\n\n\nexport{\n    PharmacyOperatorLogin,\n    PharmacyOperatorDashboard,\n}\n\nclass AddStock extends Component{\n    constructor(props) {\n        super(props)\n        this.onChangeDrugName = this.onChangeDrugName.bind(this)\n        this.onChangeExpiryDate = this.onChangeExpiryDate.bind(this)\n        this.onChangeQuantity = this.onChangeQuantity.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.state = {\n            store_id:'',\n            drug_name:'',\n            expiry_date:'',\n            quantity:'',\n        }\n        \n    }\n\n    onChangeDrugName(e){\n        this.setState({drug_name: e.target.value})\n    }\n\n    onChangeExpiryDate(e){\n        this.setState({expiry_date: e.target.value})\n    }\n\n    onChangeQuantity(e){\n        this.setState({quantity: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n        let store_id = sessionStorage.getItem('store_id')\n        console.log(store_id)\n        const userObject = {\n            store_id: store_id,\n            drug_name:this.state.drug_name,\n            expiry_date:this.state.expiry_date,\n            quantity:this.state.quantity,\n        }\n        console.log(userObject)\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/stock/addstock`, userObject)\n        .then((res) => {\n            console.log(res.data.message)\n            toast.success('New stock added')\n        }).catch((error) => {\n            console.log(error)\n            toast.success('Invalid details')\n        });\n\n        this.setState({\n            store_id:'',\n            drug_name:'',\n            expiry_date:'',\n            quantity:'',\n        });\n\n    }\n    render(){\n        return(\n            <Form onSubmit={this.onSubmit.bind(this)}>\n                <Form.Group>\n                    <Form.Label>Drug Name</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"Enter Drug Name\" value={this.state.drug_name} onChange={this.onChangeDrugName.bind(this)} />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Expiry Date</Form.Label>\n                    <Form.Control required type=\"date\" placeholder=\"Enter Expiry Date\" value={this.state.expiry_date} onChange={this.onChangeExpiryDate.bind(this)} />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Quantity</Form.Label>\n                    <Form.Control required type=\"number\" placeholder=\"Enter Quantity\" value={this.state.quantity} onChange={this.onChangeQuantity.bind(this)} />\n                </Form.Group>\n                \n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n                <ToastContainer/>\n            </Form>\n        )\n    }\n}\n\nclass ShowStock extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            stocksInfo:[]\n        }\n        \n    }\n\n    componentDidMount(){\n        let store_id = sessionStorage.getItem('store_id')\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/stock/showstock`, {\n            headers:{\n                'store_id': store_id\n            }\n        })\n        .then(res => {\n            this.setState({ stocksInfo: res.data });\n            console.log(this.state.stocksInfo)\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    render(){\n        const info = []\n        for (let i = 0; i < this.state.stocksInfo.length; i++) {\n            info.push(\n                <Card>\n                    <Card.Body>\n                        <Card.Title>{this.state.stocksInfo[i].drug_name}</Card.Title>\n                        <Card.Text>\n                            Expiry Date: {this.state.stocksInfo[i].expiry_date}\n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        Quantity: {this.state.stocksInfo[i].quantity}\n                    </Card.Footer>\n                </Card>\n            )\n        }\n        return(\n            <CardDeck>\n                {info}\n            </CardDeck>\n        )\n    }\n}\n\nclass UpdateStock extends Component{\n    constructor(props) {\n        super(props)\n        this.onChangeDrugName = this.onChangeDrugName.bind(this)\n        this.onChangeExpiryDate = this.onChangeExpiryDate.bind(this)\n        this.onChangeQuantity = this.onChangeQuantity.bind(this)\n        this.onClickUpdate = this.onClickUpdate.bind(this)\n        this.onClickDelete = this.onClickDelete.bind(this)\n        this.state = {\n            stocksInfo:[],\n            drug_name:'',\n            expiry_date:'',\n            quantity:'',\n        }\n        \n    }\n\n    componentDidMount(){\n        let store_id = sessionStorage.getItem('store_id')\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/stock/showstock`, {\n            headers:{\n                'store_id': store_id\n            }\n        })\n        .then(res => {\n            this.setState({ stocksInfo: res.data });\n            console.log(this.state.stocksInfo)\n            if(this.state.stocksInfo.length >= 1){\n                this.setState({drug_name:this.state.stocksInfo[0].drug_name})\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    onChangeDrugName(e){\n        this.setState({drug_name: e.target.value})\n    }\n\n    onChangeExpiryDate(e){\n        this.setState({expiry_date: e.target.value})\n    }\n\n    onChangeQuantity(e){\n        this.setState({quantity: e.target.value})\n    }\n\n    onClickUpdate(e){\n        e.preventDefault();\n        let store_id = sessionStorage.getItem('store_id')\n        console.log(store_id)\n        const userObject = {\n            store_id: store_id,\n            drug_name:this.state.drug_name,\n            expiry_date:this.state.expiry_date,\n            quantity:this.state.quantity,\n        }\n        console.log(userObject)\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/stock/updatestock`, userObject)\n        .then((res) => {\n            console.log(res.data.message)\n            toast.success('Stock updated')\n        }).catch((error) => {\n            console.log(error)\n            toast.error('Invalid details')\n        });\n\n        this.setState({\n            store_id:'',\n            expiry_date:'',\n            quantity:'',\n        });\n    }\n\n    onClickDelete(e){\n        e.preventDefault();\n        let store_id = sessionStorage.getItem('store_id')\n        console.log(store_id)\n        const userObject = {\n            store_id: store_id,\n            drug_name:this.state.drug_name,\n            expiry_date:this.state.expiry_date,\n            quantity:this.state.quantity,\n        }\n        console.log(userObject)\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/stock/deletestock`, userObject)\n        .then((res) => {\n            console.log(res.data.message)\n            toast.success('Stock Deleted')\n        }).catch((error) => {\n            console.log(error)\n            toast.error('Invalid details')\n        });\n\n        this.setState({\n            store_id:'',\n            expiry_date:'',\n            quantity:'',\n        });\n    }\n\n    render(){\n        const info = []\n        for (let i = 0; i < this.state.stocksInfo.length; i++) {\n            info.push(\n                <option value= {this.state.stocksInfo[i].drug_name}>\n                    {this.state.stocksInfo[i].drug_name}\n                </option>\n            )\n        }\n        if(info.length === 0){\n            info.push(<option>Stock Empty</option>)\n        }\n        \n        return(\n            <Container>\n                <Jumbotron>\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Select Drug Name</Form.Label>\n                        <Form.Control as=\"select\" name=\"drug_name\" id=\"drug_name\" value={this.state.drug_name} onChange={this.onChangeDrugName.bind(this)}>\n                            {info}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Expiry Date</Form.Label>\n                        <Form.Control required type=\"date\" value={this.state.expiry_date} onChange={this.onChangeExpiryDate.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Quantity</Form.Label>\n                        <Form.Control required type=\"number\" placeholder=\"Enter Quantity\" value={this.state.quantity} onChange={this.onChangeQuantity.bind(this)}/>\n                    </Form.Group>\n\n                    <Button onClick={this.onClickUpdate} variant=\"success\">Update</Button>{' '}\n                    <Button onClick={this.onClickDelete} variant=\"danger\">Delete</Button>\n                    <ToastContainer/>\n                </Jumbotron>\n            </Container>\n        )\n    }\n}","/home/shaunak/SE/SE_Project/client/src/services/LoginDoctor.js",["88","89","90"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Redirect, Link,} from 'react-router-dom';\nimport { selectFields } from 'express-validator/src/select-fields';\nimport { compare } from 'bcryptjs';\nimport {\n    Form,\n    Button,\n    Jumbotron,\n    Container,\n    Card\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport emailjs from 'emailjs-com';\n\nconst REDIRECT_PATH_LOGIN = 'doctor/dashboard'\n\nclass DoctorLogin extends Component{\n    constructor(props) {\n        super(props)\n\n        this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            aadhaar_id: '',\n            password: '',\n            redirect_flag: false\n        }\n\n\n    }\n\n    onChangeAadhaar(e){\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onChangePassword(e){\n        this.setState({password: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n\n        const userObject = {\n            aadhaar_id : this.state.aadhaar_id,\n            password : this.state.password\n        };\n        \n        sessionStorage.setItem('doctor_aadhaar_id', this.state.aadhaar_id);\n        console.log(userObject)\n\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/doctor/login`, userObject)\n        .then((res) => {\n            // Save data to sessionStorage\n            this.setState({redirect_flag: true}) \n        }).catch((error) => {\n            console.log(error)\n            toast.error('Invalid creds')\n        });\n\n        this.setState({ aadhaar_id: '', password: '', redirect_flag: false});\n\n    }\n\n   \n    render(){\n        var isRedirect = this.state.redirect_flag;\n        let redirection_html = '';\n        if(isRedirect){\n            redirection_html = <Redirect to={REDIRECT_PATH_LOGIN}/>\n        }\n        else{\n            redirection_html = \"\";\n        }\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Login As Doctor</h2>\n                    <Form onSubmit={this.onSubmit.bind(this)}>\n\n                        <Form.Group>\n                            <Form.Label>Aadhar ID</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Aadhar Number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar.bind(this)} Min=\"100000000000\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control required onChange={this.onChangePassword.bind(this)} value={this.state.password} type=\"password\" placeholder=\"Password\" />\n                        </Form.Group>\n\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                        <ToastContainer/>\n                    </Form>\n                </Jumbotron>\n                {redirection_html}\n            </Container> \n        )\n    }\n}\n\nclass DoctorDashboard extends Component{\n    constructor(props) {\n        super(props);\n        this.onClickViewPatientProfile = this.onClickViewPatientProfile.bind(this);\n        this.onClickViewAppointment = this.onClickViewAppointment.bind(this);\n        this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        this.state = {\n            aadhaar_id:'',\n            showData: false,\n            doctor_id:'',\n            showAppointment: false\n        }\n        this.state = {\n            usersCollection:'',\n            doctorCollection:'',\n            appointmentCollection: '',\n        }\n    }\n\n\n    onClickViewPatientProfile(e) {\n        e.preventDefault();\n        this.setState({showData:false})\n        console.log(this.state.aadhaar_id)\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/doctor/viewpatient`, {\n            headers:{\n                'aadhaar_id': this.state.aadhaar_id\n            }\n        })\n        .then(res => {\n            this.setState({ usersCollection: res.data });\n            console.log(this.state.usersCollection)\n            this.setState({showData:true})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n    \n\n    async onClickViewAppointment(e) {\n        e.preventDefault();\n        let doctor_aadhaar_id = sessionStorage.getItem('doctor_aadhaar_id')\n        console.log(doctor_aadhaar_id);\n        await axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/doctor/doctorInfo`, {\n            headers:{\n                'aadhaar_id': doctor_aadhaar_id,\n            }\n        })\n        .then(res => {\n            this.setState({doctorCollection: res.data})\n            this.setState({doctor_id: this.state.doctorCollection[0].doctor_id})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n\n        await axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/appointment/doctorappointmentinfo`, {\n            headers:{\n                'doctor_id': this.state.doctor_id\n            }\n        })\n        .then(res => {\n            this.setState({ appointmentCollection: res.data });\n            console.log(this.state.appointmentCollection)\n            this.setState({showAppointment:true})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    \n    onChangeAadhaar(e){\n        this.setState({aadhaar_id: e.target.value})\n    }   \n    render(){\n        return(\n            <Container>\n                <Container>\n                    <Jumbotron>\n                        <h3>Doctor Dashboard</h3> <hr></hr>\n                        <Form.Group>\n                            <Form.Label>Enter Aadhaar Id of Patient</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Aadhaar Id of Patient\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar.bind(this)}/>\n                        </Form.Group>\n                        <Button block onClick={this.onClickViewPatientProfile} size='lg' variant='info'>View Patient Profile</Button>{this.state.showData ? <DisplayPatientData user={this.state.usersCollection} />: null}\n                        </Jumbotron>\n                </Container>\n                <Container>\n                <Jumbotron>\n                    <Button block onClick={this.onClickViewAppointment} size='lg' variant='dark'>Appointment Details</Button>{this.state.showAppointment? <DisplayAppointments user={this.state.appointmentCollection}/>: null}\n                    <Button block href=\"/logout\" size='lg' variant='danger'>Logout</Button>{'  '}\n                </Jumbotron>\n                <ToastContainer/>\n                </Container>\n            </Container>\n        )\n    }\n}\n\n\nexport{\n    DoctorLogin,\n    DoctorDashboard,\n}\n\nfunction DisplayPatientData(props) {\n    if(props.user[0]){\n        console.log(props);\n        \n        return (\n            <Card>\n                <Card.Body>\n                    <blockquote className=\"blockquote mb-0\">\n                        <h4>Aadhaar: {props.user[0].aadhaar_id}</h4>\n                        <h4>Name: {props.user[0].name}</h4>\n                        <h4>Age: {props.user[0].age}</h4>\n                        <h4>BMI: {props.user[0].bmi}</h4>\n                        <h4>Last checkup date: {props.user[0].last_checkup_date ? <>{props.user[0].last_checkup_date.substring(0, 10)}</>: null}</h4>\n                        <h4>Spo2: {props.user[0].spo2}</h4>\n                        <h4>Comorbidity: {props.user[0].comorbidity}</h4>\n                    </blockquote>\n                </Card.Body>\n            </Card>\n        );\n    }\n    else{\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Nothing To Show</h2>\n                </Jumbotron>\n            </Container>\n        )\n    }\n}\n\nclass DisplayAppointments extends Component {\n    constructor(props) {\n        super(props);\n        this.onClickConfirm = this.onClickConfirm.bind(this);\n    }\n\n\n    onClickConfirm(i, e){\n        e.preventDefault()\n        console.log(i)\n        const userObject = {\n            aadhaar_id : i.aadhaar_id,\n            doctor_id : i.doctor_id,\n            slot: i.slot,\n        };\n        \n        console.log(userObject)\n\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/appointment/confirmstatus`, userObject)\n        .then((res) => {\n            console.log(res.data);\n\n            var templateParams = {\n                to_email: res.data.user[0].email_id,\n                to_name: res.data.user[0].name,\n                message:'Your appointment is confirmed.'\n            };\n            emailjs.send('service_nsema9w', 'template_a1xy8li', templateParams, 'user_vHmTSugteuDoVDXBeI5sc')\n            .then(function(response) {\n                console.log('SUCCESS!', response.status, response.text);\n                toast.success('Mail sent to Patient')\n            }, function(error) {\n                console.log('FAILED...', error);\n            });\n        \n        }).catch((error) => {\n            console.log(error)\n        });\n\n    }\n\n    render(){\n        if(this.props.user.length === 0){\n            return(\n                <Container>\n                    <Jumbotron>\n                        <h3>No appointements Pending Or Scheduled.</h3>\n                    </Jumbotron>\n                </Container>\n            )\n        }\n        const listItems = this.props.user.map((i) => \n        <Card style={{ width: '18rem'}}>\n            <Card.Body>\n                <Card.Title>{i.slot}</Card.Title>\n                <Card.Text> {i.aadhaar_id} </Card.Text>\n                {i.status ? <Button variant='warning'>Confirmed</Button>: <Button variant=\"success\" onClick={(e) => this.onClickConfirm(i, e)}>Confirm Appointment </Button>}\n            </Card.Body>\n        </Card>\n            );\n        return(\n            <div>\n                {listItems}\n            </div>\n        )\n    }\n}","/home/shaunak/SE/SE_Project/client/src/services/LoginHospitalOperator.js",["91"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {Redirect, Link,} from 'react-router-dom';\nimport {\n    Form,\n    Button,\n    Jumbotron,\n    Container,\n    Card\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst REDIRECT_PATH_LOGIN = 'hospitaloperator/dashboard'\n\n\n\nclass HospitalOperatorLogin extends Component{\n    constructor(props) {\n        super(props)\n\n        this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            aadhaar_id: '',\n            password: '',\n            redirect_flag: false\n        }\n    }\n\n    onChangeAadhaar(e){\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onChangePassword(e){\n        this.setState({password: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n\n        const userObject = {\n            aadhaar_id : this.state.aadhaar_id,\n            password : this.state.password\n        };\n        sessionStorage.setItem('aadhaar_id_hospital', this.state.aadhaar_id)\n        console.log(userObject)\n\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/operator/hospitallogin`, userObject)\n        .then((res) => {\n            console.log(res.data.token)\n\n            // Save data to sessionStorage\n            sessionStorage.setItem('token', res.data.token);\n\n            // Get saved data from sessionStorage\n            let data = sessionStorage.getItem('token');\n\n            console.log(data)\n\n            this.setState({redirect_flag: true}) \n            \n        \n        }).catch((error) => {\n            console.log(error)\n            toast.error('Invalid creds')\n        });\n\n        this.setState({ aadhaar_id: '', password: '', redirect_flag: false});\n\n    }\n\n   \n    render(){\n        var isRedirect = this.state.redirect_flag;\n        let redirection_html = '';\n        if(isRedirect){\n            redirection_html = <Redirect to={REDIRECT_PATH_LOGIN}/>\n        }\n        else{\n            redirection_html = \"\";\n        }\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Login As Hospital Operator</h2>\n                    <Form onSubmit={this.onSubmit.bind(this)}>\n\n                        <Form.Group>\n                            <Form.Label>Aadhar ID</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Aadhar Number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar.bind(this)} Min=\"100000000000\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control required onChange={this.onChangePassword.bind(this)} value={this.state.password} type=\"password\" placeholder=\"Password\" />\n                        </Form.Group>\n\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                        <ToastContainer/>\n                    </Form>\n                </Jumbotron>\n                {redirection_html}\n            </Container> \n        )\n    }\n}\n\nclass HospitalOperatorDashboard extends Component{\n    constructor(props) {\n        super(props)\n        this.onClickViewData = this.onClickViewData.bind(this)\n        this.onClickUpdateData = this.onClickUpdateData.bind(this)\n        this.state = {\n            operatorInfo: '',\n            showViewData: false,\n            showUpdateData: false,\n        }\n        \n    }\n\n    onClickViewData(e){\n        e.preventDefault();\n        if(!this.state.showViewData)\n            this.setState({showViewData:true})\n        else\n            this.setState({showViewData: false})\n    }\n\n    onClickUpdateData(e){\n        e.preventDefault();\n        if(!this.state.showUpdateData)\n            this.setState({showUpdateData:true})\n        else\n            this.setState({showUpdateData:false})\n    }\n\n    render(){\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Hospital Operator Dashboard</h2><hr></hr>\n                    <Button block onClick={this.onClickViewData} size='lg' variant='secondary'>View Patient Data</Button>{this.state.showViewData ? <ViewData user={this.state.operatorInfo} />: null}\n                    <Button block onClick={this.onClickUpdateData} size='lg' variant='dark'>Update Patient Data</Button>{this.state.showUpdateData ? <UpdateData user={this.state.operatorInfo} />: null}\n                    <Button block href=\"/logout\" size='lg' variant='danger'>Logout</Button>{'  '}\n                </Jumbotron>\n            </Container>\n        )\n    }\n}\n\n\n\nexport{\n    HospitalOperatorLogin,\n    HospitalOperatorDashboard,\n}\n\nclass ViewData extends Component{\n    constructor(props) {\n        super(props)\n        \n        this.onClickViewPatientProfile = this.onClickViewPatientProfile.bind(this)\n        this.onChangeAadhaarId = this.onChangeAadhaarId.bind(this)\n        this.state = {\n            patientData:'',\n            aadhaar_id:'',\n        }\n        \n    }\n\n    onChangeAadhaarId(e){\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onClickViewPatientProfile(e){\n        e.preventDefault()\n        console.log(this.state.aadhaar_id)\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/doctor/viewpatient`, {\n            headers:{\n                'aadhaar_id': this.state.aadhaar_id\n            }\n        })\n        .then(res => {\n            this.setState({ patientData: res.data });\n            console.log(this.state.patientData)\n            this.setState({showData:true})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n\n    }\n    render(){\n        return(\n            <div>\n                <Form.Group>\n                    <Form.Label>Aadhar ID</Form.Label>\n                    <Form.Control required type=\"number\" placeholder=\"Enter Aadhar Number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaarId.bind(this)} Min=\"100000000000\"/>\n                    <Button variant='primary' onClick={this.onClickViewPatientProfile}>View Patient Profile</Button><br></br>{this.state.patientData ? <DisplayPatientData user={this.state.patientData} />: null}\n                </Form.Group>\n            </div>\n        )\n    }\n}\n\nclass UpdateData extends Component{\n    constructor(props) {\n        super(props)\n        this.onChangeAadhaarId = this.onChangeAadhaarId.bind(this)\n        this.onChangeSpo2 = this.onChangeSpo2.bind(this);\n        this.onChangeTemperature = this.onChangeTemperature.bind(this);\n        this.onChangeLastCheckupDate = this.onChangeLastCheckupDate.bind(this);\n        this.onChangePulseRate = this.onChangePulseRate.bind(this);\n        this.onChangeComorbidity = this.onChangeComorbidity.bind(this);\n        this.onClickUpdateData = this.onClickUpdateData.bind(this)\n        this.state = {\n            PatientInfo:[],\n            aadhaar_id:'',\n            spo2: '',\n            temperature: '',\n            last_checkup_date: '',\n            pulse_rate: '',\n            comorbidity:'',\n        }\n        \n        \n    }\n\n    onChangeAadhaarId(e){\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onChangeSpo2(e){\n        this.setState({spo2: e.target.value})\n    }\n    onChangeTemperature(e){\n        this.setState({temperature: e.target.value})\n    }\n    onChangeLastCheckupDate(e){\n        this.setState({last_checkup_date: e.target.value})\n    }\n    onChangePulseRate(e){\n        this.setState({pulse_rate: e.target.value})\n    }\n    onChangeComorbidity(e){\n        this.setState({comorbidity: e.target.value})\n    }\n\n    onClickUpdateData(e){\n        e.preventDefault();\n        const userObject = {\n            aadhaar_id: this.state.aadhaar_id,\n            spo2: this.state.spo2,\n            temperature: this.state.temperature,\n            last_checkup_date: this.state.last_checkup_date,\n            pulse_rate: this.state.pulse_rate,\n            comorbidity:this.state.comorbidity,\n        }\n        console.log(userObject)\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/citizen/updateinfo`, userObject)\n        .then((res) => {\n            console.log(res.data.message)\n            toast.success('Updated sucessfully')\n        }).catch((error) => {\n            console.log(error)\n            toast.success('Invalid details')\n        });\n\n        this.setState({\n            aadhaar_id:'',\n            spo2: '',\n            temperature: '',\n            last_checkup_date: '',\n            pulse_rate: '',\n            comorbidity:'',\n        });\n    }\n    \n\n    render(){\n        \n        return(\n            <Container>\n                <Jumbotron>\n                    <Form.Group>\n                        <Form.Label>Aadhaar</Form.Label>\n                        <Form.Control required type=\"number\" placeholder=\"Enter Patient Aadhar\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaarId.bind(this)} Min=\"100000000000\"/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Last Checkup Date</Form.Label>\n                        <Form.Control required type=\"date\" placeholder=\"Enter Last Checkup Date\" value={this.state.last_checkup_date} onChange={this.onChangeLastCheckupDate.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>SPO2</Form.Label>\n                        <Form.Control required type=\"number\" placeholder=\"Enter SPO2\" value={this.state.spo2} onChange={this.onChangeSpo2.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Temperature</Form.Label>\n                        <Form.Control required type=\"number\" placeholder=\"Enter Temperature\" value={this.state.temperature} onChange={this.onChangeTemperature.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Pulse Rate</Form.Label>\n                        <Form.Control required type=\"number\" placeholder=\"Enter Pulse Rate\" value={this.state.pulse_rate} onChange={this.onChangePulseRate.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Comorbidity</Form.Label>\n                        <Form.Control required type=\"text\" placeholder=\"Enter Temperature\" value={this.state.comorbidity} onChange={this.onChangeComorbidity.bind(this)}/>\n                    </Form.Group>\n\n                    <Button variant=\"primary\" onClick={this.onClickUpdateData}>\n                        Update\n                    </Button>\n\n                    <ToastContainer/>\n\n                </Jumbotron>\n            </Container>\n        )\n    }\n}\n\nfunction DisplayPatientData(props) {\n    if(props.user[0]){\n        return (\n            <Card>\n                <Card.Body>\n                    <blockquote className=\"blockquote mb-0\">\n                        <h4>Aadhaar: {props.user[0].aadhaar_id}</h4>\n                        <h4>Name: {props.user[0].name}</h4>\n                        <h4>Age: {props.user[0].age}</h4>\n                        <h4>BMI: {props.user[0].bmi}</h4>\n                        <h4>Last checkup date: {props.user[0].last_checkup_date ? <>{props.user[0].last_checkup_date.substring(0, 10)}</>: null}</h4>\n                        <h4>Spo2: {props.user[0].spo2}</h4>\n                        <h4>Comorbidity: {props.user[0].comorbidity}</h4>\n                    </blockquote>\n                </Card.Body>\n            </Card>\n        );\n    }\n    else{\n        return(\n            <div>\n                <h2>\n                    Patient Record Not Found.\n                </h2>\n            </div>\n        )\n    }\n}\n","/home/shaunak/SE/SE_Project/client/src/services/FAQ.js",["92","93"],"/home/shaunak/SE/SE_Project/client/src/services/Analysis.js",["94","95","96","97"],{"ruleId":"98","severity":1,"message":"99","line":4,"column":16,"nodeType":"100","messageId":"101","endLine":4,"endColumn":29},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":60,"column":37,"nodeType":"108","messageId":"109","endLine":60,"endColumn":39},{"ruleId":"98","severity":1,"message":"110","line":6,"column":5,"nodeType":"100","messageId":"101","endLine":6,"endColumn":16},{"ruleId":"98","severity":1,"message":"111","line":7,"column":5,"nodeType":"100","messageId":"101","endLine":7,"endColumn":18},{"ruleId":"98","severity":1,"message":"112","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":16},{"ruleId":"98","severity":1,"message":"113","line":4,"column":33,"nodeType":"100","messageId":"101","endLine":4,"endColumn":39},{"ruleId":"114","severity":1,"message":"115","line":28,"column":70,"nodeType":"108","messageId":"116","endLine":28,"endColumn":71},{"ruleId":"117","severity":1,"message":"118","line":37,"column":21,"nodeType":"119","endLine":37,"endColumn":38},{"ruleId":"98","severity":1,"message":"120","line":6,"column":19,"nodeType":"100","messageId":"101","endLine":6,"endColumn":23},{"ruleId":"98","severity":1,"message":"120","line":3,"column":19,"nodeType":"100","messageId":"101","endLine":3,"endColumn":23},{"ruleId":"98","severity":1,"message":"121","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":22},{"ruleId":"98","severity":1,"message":"122","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":17},{"ruleId":"98","severity":1,"message":"120","line":5,"column":19,"nodeType":"100","messageId":"101","endLine":5,"endColumn":23},{"ruleId":"98","severity":1,"message":"123","line":1,"column":28,"nodeType":"100","messageId":"101","endLine":1,"endColumn":37},{"ruleId":"98","severity":1,"message":"124","line":1,"column":39,"nodeType":"100","messageId":"101","endLine":1,"endColumn":47},{"ruleId":"106","severity":1,"message":"107","line":322,"column":25,"nodeType":"108","messageId":"109","endLine":322,"endColumn":27},{"ruleId":"106","severity":1,"message":"107","line":322,"column":38,"nodeType":"108","messageId":"109","endLine":322,"endColumn":40},{"ruleId":"106","severity":1,"message":"107","line":324,"column":30,"nodeType":"108","messageId":"109","endLine":324,"endColumn":32},{"ruleId":"106","severity":1,"message":"107","line":324,"column":43,"nodeType":"108","messageId":"109","endLine":324,"endColumn":45},"no-unused-vars","'AppWithRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["125"],"no-negated-in-lhs",["126"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ButtonGroup' is defined but never used.","'ButtonToolbar' is defined but never used.","'ReactDOM' is defined but never used.","'Button' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Link' is defined but never used.","'selectFields' is defined but never used.","'compare' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]