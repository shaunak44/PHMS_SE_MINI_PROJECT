[{"/home/shaunak/SE/SE_Project/client/src/index.js":"1","/home/shaunak/SE/SE_Project/client/src/reportWebVitals.js":"2","/home/shaunak/SE/SE_Project/client/src/App1.js":"3","/home/shaunak/SE/SE_Project/client/src/services/signUp.js":"4","/home/shaunak/SE/SE_Project/client/src/services/Login.js":"5","/home/shaunak/SE/SE_Project/client/src/services/CitizenProfile.js":"6","/home/shaunak/SE/SE_Project/client/src/services/CreateCitizenProfile.js":"7","/home/shaunak/SE/SE_Project/client/src/services/RegisterHospital.js":"8","/home/shaunak/SE/SE_Project/client/src/services/RegisterPharmacy.js":"9","/home/shaunak/SE/SE_Project/client/src/services/RegisterOperator.js":"10","/home/shaunak/SE/SE_Project/client/src/services/RegisterDoctor.js":"11","/home/shaunak/SE/SE_Project/client/src/services/LoginDoctor.js":"12","/home/shaunak/SE/SE_Project/client/src/services/LoginPharmacyOperator.js":"13","/home/shaunak/SE/SE_Project/client/src/services/LoginHospitalOperator.js":"14"},{"size":521,"mtime":1617876119566,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1612081859868,"results":"17","hashOfConfig":"16"},{"size":4302,"mtime":1618651808969,"results":"18","hashOfConfig":"16"},{"size":2347,"mtime":1617876279441,"results":"19","hashOfConfig":"16"},{"size":2486,"mtime":1617877461046,"results":"20","hashOfConfig":"16"},{"size":1345,"mtime":1618384294063,"results":"21","hashOfConfig":"16"},{"size":10733,"mtime":1618415390805,"results":"22","hashOfConfig":"16"},{"size":3430,"mtime":1618045120731,"results":"23","hashOfConfig":"16"},{"size":3504,"mtime":1618045132975,"results":"24","hashOfConfig":"16"},{"size":2532,"mtime":1618046328729,"results":"25","hashOfConfig":"16"},{"size":2737,"mtime":1618070701276,"results":"26","hashOfConfig":"16"},{"size":7227,"mtime":1618395568847,"results":"27","hashOfConfig":"16"},{"size":12243,"mtime":1618231725085,"results":"28","hashOfConfig":"16"},{"size":9175,"mtime":1618236668580,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1hvvxb4",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/home/shaunak/SE/SE_Project/client/src/index.js",["63"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App1, { AppWithRouter } from './App1';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App1/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["64","65"],"/home/shaunak/SE/SE_Project/client/src/reportWebVitals.js",[],"/home/shaunak/SE/SE_Project/client/src/App1.js",["66"],"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  withRouter\n} from \"react-router-dom\";\nimport SignUp from './services/signUp'\nimport Login from './services/Login'\nimport {DoctorLogin, DoctorDashboard} from './services/LoginDoctor'\nimport {PharmacyOperatorLogin, PharmacyOperatorDashboard} from './services/LoginPharmacyOperator'\nimport {HospitalOperatorLogin, HospitalOperatorDashboard} from './services/LoginHospitalOperator'\nimport CitizenProfile from './services/CitizenProfile'\nimport HospitalRegister from './services/RegisterHospital'\nimport PharmacyRegister from './services/RegisterPharmacy'\nimport OperatorRegister from './services/RegisterOperator'\nimport DoctorRegister from './services/RegisterDoctor'\nimport {CreateCitizenProfile, ViewCitizenInfo, BookAppointment, CheckAppointment} from \"./services/CreateCitizenProfile\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Navbar} from 'react-bootstrap'\n\n\nfunction App1() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/signup\">Sign Up</Link>\n            </li>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n            <li>\n              <Link to=\"/logindoctor\">Doctor Login</Link>\n            </li>\n            <li>\n              <Link to=\"/loginpharmacyoperator\">Pharmacy operator Login</Link>\n            </li>\n            <li>\n              <Link to=\"/loginhospitaloperator\">Hospital operator Login</Link>\n            </li>\n            <li>\n              <Link to=\"/registerhospital\">Register as hospital</Link>\n            </li>\n            <li>\n              <Link to=\"/registerpharmacy\">Register as pharmacy</Link>\n            </li>\n            <li>\n              <Link to=\"/registeroperator\">Register as operator</Link>\n            </li>\n            <li>\n              <Link to=\"/registerdoctor\">Register as doctor</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route exact path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/logindoctor\">\n            <DoctorLogin />\n          </Route>\n          <Route exact path=\"/loginpharmacyoperator\">\n            <PharmacyOperatorLogin />\n          </Route>\n          <Route exact path=\"/loginHospitaloperator\">\n            <HospitalOperatorLogin />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/citizen/profile\">\n            <CitizenProfile />\n          </Route>\n          <Route exact path=\"/doctor/dashboard\">\n            <DoctorDashboard />\n          </Route>\n          <Route exact path=\"/pharmacyoperator/dashboard\">\n            <PharmacyOperatorDashboard />\n          </Route>\n          <Route exact path=\"/hospitaloperator/dashboard\">\n            <HospitalOperatorDashboard />\n          </Route>\n          <Route exact path=\"/citizen/createprofile\">\n            <CreateCitizenProfile />\n          </Route>\n          <Route exact path=\"/logout\">\n            <Home />\n          </Route>\n          <Route exact path=\"/citizen/viewprofile\">\n            <ViewCitizenInfo />\n          </Route>\n          <Route exact path=\"/citizen/bookappointment\">\n            <BookAppointment />\n          </Route>\n          <Route exact path=\"/citizen/checkappointment\">\n            <CheckAppointment />\n          </Route>\n          <Route exact path=\"/registerhospital\">\n            <HospitalRegister />\n          </Route>\n          <Route exact path=\"/registerpharmacy\">\n            <PharmacyRegister />\n          </Route>\n          <Route exact path=\"/registeroperator\">\n            <OperatorRegister />\n          </Route>\n          <Route exact path=\"/registerdoctor\">\n            <DoctorRegister />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nconst AppWithRouter = withRouter(App1);\nexport {AppWithRouter};\nexport default App1;\n\nfunction Home() {\n  return (<h2>welcome to Home Page</h2>);\n}\n","/home/shaunak/SE/SE_Project/client/src/services/signUp.js",[],"/home/shaunak/SE/SE_Project/client/src/services/Login.js",[],"/home/shaunak/SE/SE_Project/client/src/services/CitizenProfile.js",[],"/home/shaunak/SE/SE_Project/client/src/services/CreateCitizenProfile.js",[],["67","68"],"/home/shaunak/SE/SE_Project/client/src/services/RegisterHospital.js",[],"/home/shaunak/SE/SE_Project/client/src/services/RegisterPharmacy.js",[],"/home/shaunak/SE/SE_Project/client/src/services/RegisterOperator.js",[],"/home/shaunak/SE/SE_Project/client/src/services/RegisterDoctor.js",[],"/home/shaunak/SE/SE_Project/client/src/services/LoginDoctor.js",["69","70","71"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Redirect, Link,} from 'react-router-dom';\nimport { selectFields } from 'express-validator/src/select-fields';\nimport { compare } from 'bcryptjs';\n\nconst REDIRECT_PATH_LOGIN = 'doctor/dashboard'\n\nclass DoctorLogin extends Component{\n    constructor(props) {\n        super(props)\n\n        this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            aadhaar_id: '',\n            password: '',\n            redirect_flag: false\n        }\n\n\n    }\n\n    onChangeAadhaar(e){\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onChangePassword(e){\n        this.setState({password: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n\n        const userObject = {\n            aadhaar_id : this.state.aadhaar_id,\n            password : this.state.password\n        };\n        \n        sessionStorage.setItem('doctor_aadhaar_id', this.state.aadhaar_id);\n        console.log(userObject)\n\n        axios.post('http://localhost:5000/doctor/login', userObject)\n        .then((res) => {\n\n            // Save data to sessionStorage\n            \n\n            this.setState({redirect_flag: true}) \n            \n        \n        }).catch((error) => {\n            console.log(error)\n        });\n\n        this.setState({ aadhaar_id: '', password: '', redirect_flag: false});\n\n    }\n\n   \n    render(){\n        var isRedirect = this.state.redirect_flag;\n        let redirection_html = '';\n        if(isRedirect){\n            redirection_html = <Redirect to={REDIRECT_PATH_LOGIN}/>\n        }\n        else{\n            redirection_html = \"\";\n        }\n        return(\n            <div>\n                <form onSubmit={this.onSubmit}>\n                    <label for=\"aadhaar_id\">Aadhaar:</label><br/>\n                    <input type=\"number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar} Min=\"100000000000\"/><br/>\n                    <label for=\"password\">Password:</label><br/>\n                    <input type=\"password\" onChange={this.onChangePassword} value={this.state.password}/><br/>\n                    <br/>\n                    <input type=\"submit\" value=\"Submit\"/>\n                </form>\n                {redirection_html}\n                \n            </div> \n            \n        )\n    }\n}\n\nclass DoctorDashboard extends Component{\n    constructor(props) {\n        super(props);\n        this.onClickViewPatientProfile = this.onClickViewPatientProfile.bind(this);\n        this.onClickViewAppointment = this.onClickViewAppointment.bind(this);\n        this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        this.state = {\n            aadhaar_id:'',\n            showData: false,\n            doctor_id:'',\n            showAppointment: false\n        }\n        this.state = {\n            usersCollection:'',\n            doctorCollection:'',\n            appointmentCollection: '',\n        }\n    }\n    onClickViewPatientProfile(e) {\n        e.preventDefault();\n        console.log(this.state.aadhaar_id)\n        axios.get('http://localhost:5000/doctor/viewpatient', {\n            headers:{\n                'aadhaar_id': this.state.aadhaar_id\n            }\n        })\n        .then(res => {\n            this.setState({ usersCollection: res.data });\n            console.log(this.state.usersCollection)\n            this.setState({showData:true})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    async onClickViewAppointment(e) {\n        e.preventDefault();\n        let doctor_aadhaar_id = sessionStorage.getItem('doctor_aadhaar_id')\n        console.log(doctor_aadhaar_id);\n        await axios.get('http://localhost:5000/doctor/doctorInfo', {\n            headers:{\n                'aadhaar_id': doctor_aadhaar_id,\n            }\n        })\n        .then(res => {\n            this.setState({doctorCollection: res.data})\n            this.setState({doctor_id: this.state.doctorCollection[0].doctor_id})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n\n        await axios.get('http://localhost:5000/appointment/doctorappointmentinfo', {\n            headers:{\n                'doctor_id': this.state.doctor_id\n            }\n        })\n        .then(res => {\n            this.setState({ appointmentCollection: res.data });\n            console.log(this.state.appointmentCollection)\n            this.setState({showAppointment:true})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    \n    onChangeAadhaar(e){\n        this.setState({aadhaar_id: e.target.value})\n    }   \n    render(){\n        return(\n            <div>\n                <label for=\"aadhaar_id\">Aadhaar:</label><br/>\n                <input type=\"number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar} Min=\"100000000000\"/><br/>    \n                <Link onClick={this.onClickViewPatientProfile}>View Patient Profile</Link><br></br>\n                {this.state.showData ? <DisplayPatientData user={this.state.usersCollection} />: null}\n                <Link onClick={this.onClickViewAppointment}>Appointment Details</Link><br></br>\n                {this.state.showAppointment? <DisplayAppointments user={this.state.appointmentCollection}/>: null}\n                <a href=\"/logout\">Logout.</a>\n            </div>\n        )\n    }\n}\n\n\nexport{\n    DoctorLogin,\n    DoctorDashboard,\n}\n\nfunction DisplayPatientData(props) {\n    if(props.user[0]){\n        return (\n            <div>\n                <h2>aadhaar: {props.user[0].aadhaar_id}</h2>\n                <h2>Name: {props.user[0].name}</h2>\n            </div>\n        );\n    }\n    else{\n        return(\n            <div>\n                <h2>\n                    Patient record not found.\n                </h2>\n            </div>\n        )\n    }\n}\n\nclass DisplayAppointments extends Component {\n    constructor(props) {\n        super(props);\n        this.onClickConfirm = this.onClickConfirm.bind(this);\n    }\n\n    onClickConfirm(i, e){\n        e.preventDefault()\n        console.log(i)\n        const userObject = {\n            aadhaar_id : i.aadhaar_id,\n            doctor_id : i.doctor_id,\n            slot: i.slot,\n        };\n        \n        console.log(userObject)\n\n        axios.post('http://localhost:5000/appointment/confirmstatus', userObject)\n        .then((res) => {\n\n            console.log(res.data);\n            \n        \n        }).catch((error) => {\n            console.log(error)\n        });\n\n    }\n\n    render(){\n        if(this.props.user.length == 0){\n            return(\n                <div>\n                    No appointements pending or scheduled.\n                </div>\n            )\n        }\n        const listItems = this.props.user.map((i) => \n            <div key={i.slot}>\n                <h3>{i.aadhaar_id}</h3>\n                <h3>{i.slot}</h3>\n                <h3>{i.status ? \"Confirmed\": <button onClick={(e) => this.onClickConfirm(i, e)}>Confirm appointment </button>}</h3>\n            </div>);\n        return(\n            <div>\n                {listItems}\n            </div>\n        )\n    }\n}","/home/shaunak/SE/SE_Project/client/src/services/LoginPharmacyOperator.js",[],"/home/shaunak/SE/SE_Project/client/src/services/LoginHospitalOperator.js",[],{"ruleId":"72","severity":1,"message":"73","line":4,"column":16,"nodeType":"74","messageId":"75","endLine":4,"endColumn":29},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"72","severity":1,"message":"80","line":22,"column":9,"nodeType":"74","messageId":"75","endLine":22,"endColumn":15},{"ruleId":"76","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"72","severity":1,"message":"83","line":4,"column":10,"nodeType":"74","messageId":"75","endLine":4,"endColumn":22},{"ruleId":"72","severity":1,"message":"84","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":233,"column":35,"nodeType":"87","messageId":"88","endLine":233,"endColumn":37},"no-unused-vars","'AppWithRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["89"],"no-negated-in-lhs",["90"],"'Navbar' is defined but never used.",["89"],["90"],"'selectFields' is defined but never used.","'compare' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]