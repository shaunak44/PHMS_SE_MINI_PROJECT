[{"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/index.js":"1","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/reportWebVitals.js":"2","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/App1.js":"3","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/Login.js":"4","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginDoctor.js":"5","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginHospitalOperator.js":"6","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/CitizenProfile.js":"7","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterPharmacy.js":"8","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterHospital.js":"9","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterDoctor.js":"10","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginPharmacyOperator.js":"11","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/CreateCitizenProfile.js":"12","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterOperator.js":"13","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/signUp.js":"14","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/Chatbot.js":"15"},{"size":521,"mtime":1618728682672,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1618463097475,"results":"18","hashOfConfig":"17"},{"size":4786,"mtime":1618748973811,"results":"19","hashOfConfig":"17"},{"size":3758,"mtime":1618754237960,"results":"20","hashOfConfig":"17"},{"size":8638,"mtime":1618754237960,"results":"21","hashOfConfig":"17"},{"size":10598,"mtime":1618754237960,"results":"22","hashOfConfig":"17"},{"size":3700,"mtime":1618761040195,"results":"23","hashOfConfig":"17"},{"size":6038,"mtime":1618754237960,"results":"24","hashOfConfig":"17"},{"size":5946,"mtime":1618754237960,"results":"25","hashOfConfig":"17"},{"size":4629,"mtime":1618754237960,"results":"26","hashOfConfig":"17"},{"size":13794,"mtime":1618754237960,"results":"27","hashOfConfig":"17"},{"size":11100,"mtime":1618754237960,"results":"28","hashOfConfig":"17"},{"size":4381,"mtime":1618754237960,"results":"29","hashOfConfig":"17"},{"size":4255,"mtime":1618754615704,"results":"30","hashOfConfig":"17"},{"size":1587,"mtime":1618750003041,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1ip7eu4",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"35"},"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/index.js",["66"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App1, { AppWithRouter } from './App1';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App1/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["67","68"],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/reportWebVitals.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/App1.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/Login.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginDoctor.js",["69","70"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Redirect, Link,} from 'react-router-dom';\nimport { selectFields } from 'express-validator/src/select-fields';\nimport { compare } from 'bcryptjs';\nimport {\n    Form,\n    Button,\n    Jumbotron,\n    Container\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst REDIRECT_PATH_LOGIN = 'doctor/dashboard'\n\nclass DoctorLogin extends Component{\n    constructor(props) {\n        super(props)\n\n        this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            aadhaar_id: '',\n            password: '',\n            redirect_flag: false\n        }\n\n\n    }\n\n    onChangeAadhaar(e){\n        this.setState({aadhaar_id: e.target.value})\n    }\n\n    onChangePassword(e){\n        this.setState({password: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n\n        const userObject = {\n            aadhaar_id : this.state.aadhaar_id,\n            password : this.state.password\n        };\n        \n        sessionStorage.setItem('doctor_aadhaar_id', this.state.aadhaar_id);\n        console.log(userObject)\n\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/doctor/login`, userObject)\n        .then((res) => {\n\n            // Save data to sessionStorage\n            \n\n            this.setState({redirect_flag: true}) \n            \n        \n        }).catch((error) => {\n            console.log(error)\n        });\n\n        this.setState({ aadhaar_id: '', password: '', redirect_flag: false});\n\n    }\n\n   \n    render(){\n        var isRedirect = this.state.redirect_flag;\n        let redirection_html = '';\n        if(isRedirect){\n            redirection_html = <Redirect to={REDIRECT_PATH_LOGIN}/>\n        }\n        else{\n            redirection_html = \"\";\n        }\n        return(\n            <Container>\n                <Jumbotron>\n                    <h2>Login As Doctor</h2>\n                    <Form onSubmit={this.onSubmit.bind(this)}>\n\n                        <Form.Group>\n                            <Form.Label>Aadhar ID</Form.Label>\n                            <Form.Control required type=\"number\" placeholder=\"Enter Aadhar Number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar.bind(this)} Min=\"100000000000\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control required onChange={this.onChangePassword.bind(this)} value={this.state.password} type=\"password\" placeholder=\"Password\" />\n                        </Form.Group>\n\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                </Jumbotron>\n                {redirection_html}\n            </Container> \n            // <div>\n            //     <form onSubmit={this.onSubmit.bind(this)}>\n            //         <label for=\"aadhaar_id\">Aadhaar:</label><br/>\n            //         <input type=\"number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar} Min=\"100000000000\"/><br/>\n            //         <label for=\"password\">Password:</label><br/>\n            //         <input type=\"password\" onChange={this.onChangePassword} value={this.state.password}/><br/>\n            //         <br/>\n            //         <input type=\"submit\" value=\"Submit\"/>\n            //     </form>\n            //     {redirection_html}\n            // </div> \n            \n        )\n    }\n}\n\nclass DoctorDashboard extends Component{\n    constructor(props) {\n        super(props);\n        this.onClickViewPatientProfile = this.onClickViewPatientProfile.bind(this);\n        this.onClickViewAppointment = this.onClickViewAppointment.bind(this);\n        this.onChangeAadhaar = this.onChangeAadhaar.bind(this);\n        this.state = {\n            aadhaar_id:'',\n            showData: false,\n            doctor_id:'',\n            showAppointment: false\n        }\n        this.state = {\n            usersCollection:'',\n            doctorCollection:'',\n            appointmentCollection: '',\n        }\n    }\n    onClickViewPatientProfile(e) {\n        e.preventDefault();\n        console.log(this.state.aadhaar_id)\n        axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/doctor/viewpatient`, {\n            headers:{\n                'aadhaar_id': this.state.aadhaar_id\n            }\n        })\n        .then(res => {\n            this.setState({ usersCollection: res.data });\n            console.log(this.state.usersCollection)\n            this.setState({showData:true})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    async onClickViewAppointment(e) {\n        e.preventDefault();\n        let doctor_aadhaar_id = sessionStorage.getItem('doctor_aadhaar_id')\n        console.log(doctor_aadhaar_id);\n        await axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/doctor/doctorInfo`, {\n            headers:{\n                'aadhaar_id': doctor_aadhaar_id,\n            }\n        })\n        .then(res => {\n            this.setState({doctorCollection: res.data})\n            this.setState({doctor_id: this.state.doctorCollection[0].doctor_id})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n\n        await axios.get(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/appointment/doctorappointmentinfo`, {\n            headers:{\n                'doctor_id': this.state.doctor_id\n            }\n        })\n        .then(res => {\n            this.setState({ appointmentCollection: res.data });\n            console.log(this.state.appointmentCollection)\n            this.setState({showAppointment:true})\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    \n    onChangeAadhaar(e){\n        this.setState({aadhaar_id: e.target.value})\n    }   \n    render(){\n        return(\n            <div>\n                <label for=\"aadhaar_id\">Aadhaar:</label><br/>\n                <input type=\"number\" value={this.state.aadhaar_id} onChange={this.onChangeAadhaar.bind(this)} Min=\"100000000000\"/><br/>    \n                <Link onClick={this.onClickViewPatientProfile}>View Patient Profile</Link><br></br>\n                {this.state.showData ? <DisplayPatientData user={this.state.usersCollection} />: null}\n                <Link onClick={this.onClickViewAppointment}>Appointment Details</Link><br></br>\n                {this.state.showAppointment? <DisplayAppointments user={this.state.appointmentCollection}/>: null}\n                <a href=\"/logout\">Logout.</a>\n            </div>\n        )\n    }\n}\n\n\nexport{\n    DoctorLogin,\n    DoctorDashboard,\n}\n\nfunction DisplayPatientData(props) {\n    if(props.user[0]){\n        return (\n            <div>\n                <h2>aadhaar: {props.user[0].aadhaar_id}</h2>\n                <h2>Name: {props.user[0].name}</h2>\n            </div>\n        );\n    }\n    else{\n        return(\n            <div>\n                <h2>\n                    Patient record not found.\n                </h2>\n            </div>\n        )\n    }\n}\n\nclass DisplayAppointments extends Component {\n    constructor(props) {\n        super(props);\n        this.onClickConfirm = this.onClickConfirm.bind(this);\n    }\n\n    onClickConfirm(i, e){\n        e.preventDefault()\n        console.log(i)\n        const userObject = {\n            aadhaar_id : i.aadhaar_id,\n            doctor_id : i.doctor_id,\n            slot: i.slot,\n        };\n        \n        console.log(userObject)\n\n        axios.post(`http://localhost:${process.env.REACT_APP_SERVER_PORT}/appointment/confirmstatus`, userObject)\n        .then((res) => {\n\n            console.log(res.data);\n            \n        \n        }).catch((error) => {\n            console.log(error)\n        });\n\n    }\n\n    render(){\n        if(this.props.user.length === 0){\n            return(\n                <div>\n                    No appointements pending or scheduled.\n                </div>\n            )\n        }\n        const listItems = this.props.user.map((i) => \n            <div key={i.slot}>\n                <h3>{i.aadhaar_id}</h3>\n                <h3>{i.slot}</h3>\n                <h3>{i.status ? \"Confirmed\": <button onClick={(e) => this.onClickConfirm(i, e)}>Confirm appointment </button>}</h3>\n            </div>);\n        return(\n            <div>\n                {listItems}\n            </div>\n        )\n    }\n}","/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginHospitalOperator.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/CitizenProfile.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterPharmacy.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterHospital.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterDoctor.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/LoginPharmacyOperator.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/CreateCitizenProfile.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/RegisterOperator.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/signUp.js",[],"/home/atharv/Projects/PHMS_SE_MINI_PROJECT/client/src/services/Chatbot.js",["71","72","73"],"import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    Container,\n} from 'react-bootstrap'\n\nexport default class Chatbot extends Component{\n    talk(event){\n        var know = {\n            \"hello\": \"Hello I Am A Simple Chatbot. I Am Here To Help You!\",\n            \"hi\": \"Hii, Tell me something about yourself ??\",\n            \"how are you?\": \"I am great !!\",\n            \"life is like hell\": \"Are you in TY COMP at COEP ?\",\n            \"tell me a random fact\": \"Life would have been much easy, if there was no Abhijit Sir.\",\n            \"yes\": \"Okay ! Have A Great Day !!\"\n        }\n        console.log(event);\n        if(event.keyCode === 13){\n            \n            var user = document.getElementById(\"userbox\").value\n            document.getElementById(\"userbox\").value = \"\"\n            document.getElementById(\"chatLog\").innerHTML += user + \"<br>\"\n            \n            if(user in know){\n                document.getElementById(\"chatLog\").innerHTML += \"> \" + know[user] + \"<br><br>\"\n            }\n            else{\n                document.getElementById(\"chatLog\").innerHTML += \"> \" + \"Sorry I Can't Understand. <br><br>\"\n            }\n        }\n    }\n    render() {\n        return (\n            <Container>\n                <h2>CHATBOT</h2>\n                <h4 id=\"chatLog\"></h4>\n                <div style={{ textAlign: \"\" }}>\n                    <input id=\"userbox\" type=\"text\" onKeyDown={this.talk}></input>\n                </div>\n                <h3>Hello I am CHABOT, Ask me your queries !</h3>\n            </Container>\n        )\n    }\n}\n",{"ruleId":"74","severity":1,"message":"75","line":4,"column":16,"nodeType":"76","messageId":"77","endLine":4,"endColumn":29},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"74","severity":1,"message":"82","line":4,"column":10,"nodeType":"76","messageId":"77","endLine":4,"endColumn":22},{"ruleId":"74","severity":1,"message":"83","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":17},{"ruleId":"74","severity":1,"message":"84","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":16},{"ruleId":"85","severity":1,"message":"86","line":28,"column":70,"nodeType":"87","messageId":"88","endLine":28,"endColumn":71},{"ruleId":"89","severity":1,"message":"90","line":36,"column":17,"nodeType":"91","endLine":36,"endColumn":34},"no-unused-vars","'AppWithRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"'selectFields' is defined but never used.","'compare' is defined but never used.","'ReactDOM' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]